#!/usr/bin/env bash
# Be sure to include above #! as the script will be called directly
#
# Author: kkhalsa (kkhalsa@archerdx.com)
# Bash hook example
# Example UI Args: -j ${JOB_ID} -d ${JOB_DIR} -o ${HOOK_OUTPUT_DIR} ${SAMPLE_NAMES_SPACED}

####polyTG_table_v1.0.1
####Author: Bob Sicko robert.sicko@health.ny.gov
####
####
####This script genotypes CFTR TG(m)T(n) alleles from fastq files. Our specific use case is ArcherDX VariantPlex CFTR fastqs.
####Disclaimer: We have validated the results generated by this script for our use case, your results may vary. User assumes all risk with the use of this script.
####The idea for this script came from: Pagin A, Devos A, Figeac M, Truant M, Willoquaux C, Broly F, et al. (2016) Applicability and Efficiency of NGS in Routine Diagnosis: In-Depth Performance Analysis of a Complete Workflow for CFTR Mutation Analysis. PLoS ONE 11(2): e0149426. doi:10.1371/journal.pone.0149426 
####
####Change Log:
####		v1.1 - Added a borderline range instead of a hard cutoff for het/homo.
####			 - Added 'percent_not_our_geno' to outputs (polyTGT_percents.txt & polyTGT_calls.txt) the percentage of reads at locus that are not classified by the genotypes in this script
####
####		v2.0 - Incorporated into Archer Analysis
####
####		v1.0.0-alpha.1 - renamed to follow semantic versioning. This will allow us to start with v1.0.0 on July 1st.
####						- labeled this one alpha since I know it will be replaced by the version that contains 1T - 11T
####
####		v1.0.0 - modified borderline range to 0.275 – 0.475 per Colleen 8/12/19.
####				- added a check for NTC samples. we won't output calls on these
####				- improved checks of total reads and total reads used in our haplotype calls
####				- this version still contains the original haplotypes TG(4-14)T(2-10)
####
####		v1.0.1-alpha.1 - added a 'final_call' column to the output table.
####						- comment out the 'counts' and 'percents' file output. we can turn these on if needed for debugging, but we don't use them.
####						- expand the haplotypes the script searches for to  TG(4-14)T(1-13)
####						- corrected column labels from 'geno' to 'haplo'
####
####		v1.0.1-alpha.2 - fixed fail on empty fastq:
####							zcat $R1 $R2 | LC_ALL=C fgrep $fiveP20 > $temp_file & zcat $R1 $R2 | LC_ALL=C fgrep $threeP20 >> $temp_file
####							was causing script to exit since set -eu
####							added || true to these lines to cause the script to continue
####						- added G to the 5' search strings. corrects minor read double counting that was causing sum_our_haplo to be a few reads > than total_reads_at_locus
####						- fixed count and percent files that can be output for debugging
####
####		v1.0.1-alpha.3 - added 'percent_haplo_used_for_call' and 'next_highest_percent_haplo' to the calls file. useful for debugging and potentially for a QC cutoff
####						- added final call the the percent and count files
####						- turned the call and count files back on for now
####
####		v2.0.0-alpha.1 - now use archer processed reads by looking for "_L001_R*_001.molbar.trimmed.deduped.fastq"
####										- This was at the suggestion of Mike as these are dedupped and error corrected.
####						- changed fail threshold to 10 instead of 100 since we are using deduped files
####						- improved search algorithm in two ways:
####										- sed used to only pass sequence lines to the grep search
####										- after the first pass grep search for 20bp5' and 20bp3', 
####											a second pass is done reverse complimenting lines that don't contain 20bp5' and 20bp3',
####											then grepping 20bp5' and 20bp3' again and adding those lines to the search file.
####						- fixed minor bug of not resetting 'percent_haplo_used_for_call' and 'next_highest_percent_haplo' for under 100 reads samples
#### 
####		v2.0.0-alpha.2 - use preprocessed bams
#### 
####		v2.0.0 - dropped the alpha, ready to use
####				- commented out the 'counts' and 'percents' file output again. we can turn these on if needed for debugging, but we don't use them.
####				- changed haplotype output to the NYS convention of T-TG, e.g. (TG)11(T)5 will now be output as 5T-11TG
####				- added job_id to the output files. note: this requires passing the job_id as an argument now.
####				- added script version to the file output
####				- removed unused code
####				- changed from ratio to proportion haplotype 2. Borderline ratio reevaluated with this new metrics. Set at 0.1389 - 0.3171
####				- added '|| :' to main samtools | grep line so script won't exit error 1 if empty grep
####
####		v2.0.1 - minor bug fix for script crash if ntc is the first sample. 'percent_haplo_used_for_call' and 'next_highest_percent_haplo' were not set in the ntc if statment. 
#### 
####To Do:
####	- Transition script to awk or python to process file from memory. This will make things much faster


set -eu

usage()
{
   echo "PolyTG_table Usage: $0 -o hook_output_dir -d job_dir -j job_id" 1>&2
   exit 1
}

while getopts ":o:d:j:" opt; do
    case "${opt}" in
        o)
            hook_output_dir=${OPTARG}
            ;;
		d)
			job_dir=${OPTARG}
			;;
		j)
			job_id=${OPTARG}
			;;
        *)
            usage
            ;;
    esac
done

shift $((OPTIND-1))

set +u

if [ -z "${hook_output_dir}" ]; then
   echo "Error: -o hook_output_dir argument is required." >> /dev/stderr
   exit 1
fi
if [ -z "${job_dir}" ]; then
   echo "Error: -d job_dir argument is required." >> /dev/stderr
   exit 1
fi
if [ -z "${job_id}" ]; then
   echo "Error: -j job_id argument is required." >> /dev/stderr
   exit 1
fi

set -u

VERSION="v2.0.0"

#print headers

#For the polyTGT_counts.txt file
#printf "sample	final_call	total_reads_at_locus	1T-4TG_count	2T-4TG_count	3T-4TG_count	4T-4TG_count	5T-4TG_count	6T-4TG_count	7T-4TG_count	8T-4TG_count	9T-4TG_count	10T-4TG_count	11T-4TG_count	12T-4TG_count	13T-4TG_count	1T-5TG_count	2T-5TG_count	3T-5TG_count	4T-5TG_count	5T-5TG_count	6T-5TG_count	7T-5TG_count	8T-5TG_count	9T-5TG_count	10T-5TG_count	11T-5TG_count	12T-5TG_count	13T-5TG_count	1T-6TG_count	2T-6TG_count	3T-6TG_count	4T-6TG_count	5T-6TG_count	6T-6TG_count	7T-6TG_count	8T-6TG_count	9T-6TG_count	10T-6TG_count	11T-6TG_count	12T-6TG_count	13T-6TG_count	1T-7TG_count	2T-7TG_count	3T-7TG_count	4T-7TG_count	5T-7TG_count	6T-7TG_count	7T-7TG_count	8T-7TG_count	9T-7TG_count	10T-7TG_count	11T-7TG_count	12T-7TG_count	13T-7TG_count	1T-8TG_count	2T-8TG_count	3T-8TG_count	4T-8TG_count	5T-8TG_count	6T-8TG_count	7T-8TG_count	8T-8TG_count	9T-8TG_count	10T-8TG_count	11T-8TG_count	12T-8TG_count	13T-8TG_count	1T-9TG_count	2T-9TG_count	3T-9TG_count	4T-9TG_count	5T-9TG_count	6T-9TG_count	7T-9TG_count	8T-9TG_count	9T-9TG_count	10T-9TG_count	11T-9TG_count	12T-9TG_count	13T-9TG_count	1T-10TG_count	2T-10TG_count	3T-10TG_count	4T-10TG_count	5T-10TG_count	6T-10TG_count	7T-10TG_count	8T-10TG_count	9T-10TG_count	10T-10TG_count	11T-10TG_count	12T-10TG_count	13T-10TG_count	1T-11TG_count	2T-11TG_count	3T-11TG_count	4T-11TG_count	5T-11TG_count	6T-11TG_count	7T-11TG_count	8T-11TG_count	9T-11TG_count	10T-11TG_count	11T-11TG_count	12T-11TG_count	13T-11TG_count	1T-12TG_count	2T-12TG_count	3T-12TG_count	4T-12TG_count	5T-12TG_count	6T-12TG_count	7T-12TG_count	8T-12TG_count	9T-12TG_count	10T-12TG_count	11T-12TG_count	12T-12TG_count	13T-12TG_count	1T-13TG_count	2T-13TG_count	3T-13TG_count	4T-13TG_count	5T-13TG_count	6T-13TG_count	7T-13TG_count	8T-13TG_count	9T-13TG_count	10T-13TG_count	11T-13TG_count	12T-13TG_count	13T-13TG_count	1T-14TG_count	2T-14TG_count	3T-14TG_count	4T-14TG_count	5T-14TG_count	6T-14TG_count	7T-14TG_count	8T-14TG_count	9T-14TG_count	10T-14TG_count	11T-14TG_count	12T-14TG_count	13T-14TG_count\n" > $hook_output_dir/${job_id}_polyTGT_counts_${VERSION}.txt


#For the polyTGT_percents.txt file
#printf "sample	final_call	total_reads_at_locus	sum_our_haplo	percent_our_haplo_vs_total_at_locus	percent_not_our_haplo	1T-4TG_percent	2T-4TG_percent	3T-4TG_percent	4T-4TG_percent	5T-4TG_percent	6T-4TG_percent	7T-4TG_percent	8T-4TG_percent	9T-4TG_percent	10T-4TG_percent	11T-4TG_percent	12T-4TG_percent	13T-4TG_percent	1T-5TG_percent	2T-5TG_percent	3T-5TG_percent	4T-5TG_percent	5T-5TG_percent	6T-5TG_percent	7T-5TG_percent	8T-5TG_percent	9T-5TG_percent	10T-5TG_percent	11T-5TG_percent	12T-5TG_percent	13T-5TG_percent	1T-6TG_percent	2T-6TG_percent	3T-6TG_percent	4T-6TG_percent	5T-6TG_percent	6T-6TG_percent	7T-6TG_percent	8T-6TG_percent	9T-6TG_percent	10T-6TG_percent	11T-6TG_percent	12T-6TG_percent	13T-6TG_percent	1T-7TG_percent	2T-7TG_percent	3T-7TG_percent	4T-7TG_percent	5T-7TG_percent	6T-7TG_percent	7T-7TG_percent	8T-7TG_percent	9T-7TG_percent	10T-7TG_percent	11T-7TG_percent	12T-7TG_percent	13T-7TG_percent	1T-8TG_percent	2T-8TG_percent	3T-8TG_percent	4T-8TG_percent	5T-8TG_percent	6T-8TG_percent	7T-8TG_percent	8T-8TG_percent	9T-8TG_percent	10T-8TG_percent	11T-8TG_percent	12T-8TG_percent	13T-8TG_percent	1T-9TG_percent	2T-9TG_percent	3T-9TG_percent	4T-9TG_percent	5T-9TG_percent	6T-9TG_percent	7T-9TG_percent	8T-9TG_percent	9T-9TG_percent	10T-9TG_percent	11T-9TG_percent	12T-9TG_percent	13T-9TG_percent	1T-10TG_percent	2T-10TG_percent	3T-10TG_percent	4T-10TG_percent	5T-10TG_percent	6T-10TG_percent	7T-10TG_percent	8T-10TG_percent	9T-10TG_percent	10T-10TG_percent	11T-10TG_percent	12T-10TG_percent	13T-10TG_percent	1T-11TG_percent	2T-11TG_percent	3T-11TG_percent	4T-11TG_percent	5T-11TG_percent	6T-11TG_percent	7T-11TG_percent	8T-11TG_percent	9T-11TG_percent	10T-11TG_percent	11T-11TG_percent	12T-11TG_percent	13T-11TG_percent	1T-12TG_percent	2T-12TG_percent	3T-12TG_percent	4T-12TG_percent	5T-12TG_percent	6T-12TG_percent	7T-12TG_percent	8T-12TG_percent	9T-12TG_percent	10T-12TG_percent	11T-12TG_percent	12T-12TG_percent	13T-12TG_percent	1T-13TG_percent	2T-13TG_percent	3T-13TG_percent	4T-13TG_percent	5T-13TG_percent	6T-13TG_percent	7T-13TG_percent	8T-13TG_percent	9T-13TG_percent	10T-13TG_percent	11T-13TG_percent	12T-13TG_percent	13T-13TG_percent	1T-14TG_percent	2T-14TG_percent	3T-14TG_percent	4T-14TG_percent	5T-14TG_percent	6T-14TG_percent	7T-14TG_percent	8T-14TG_percent	9T-14TG_percent	10T-14TG_percent	11T-14TG_percent	12T-14TG_percent	13T-14TG_percent\n" > $hook_output_dir/${job_id}_polyTGT_percents_${VERSION}.txt

#For the polyTGT_calls.txt file
printf "sample	final_call	total_reads_at_locus	sum_our_haplo	percent_our_haplo_vs_total_at_locus	percent_not_our_haplo	top_haplo_1_name	top_haplo_1_count	top_haplo_1_percent	top_haplo_2_name	top_haplo_2_count	top_haplo_2_percent	proportion_hap2	zygosity	percent_haplo_used_for_call	next_highest_percent_haplo\n" > $hook_output_dir/${job_id}_polyTGT_calls_${VERSION}.txt

for R1 in ${job_dir}/*_L001_R1_001.preprocessed.bam 
do
	prefix=$(echo ${R1} | sed "s/_L001_R1_\001\.preprocessed.bam//") 
	out_base=${prefix##*/}
	
	#added a check to output nothing for NTC
	#the polyTGT reads are artifacts of primers in the region for the NTCs
	#our QC of NTC is coverage after alignment
	if echo $out_base | grep -iqF ntc; then
		total_reads=0
		sum_our_haplo=0
		top_haplo_1_name="NTC_not_called"
		top_haplo_2_name="NTC_not_called"
		top_haplo_1_count=0
		top_haplo_2_count=0
		percent_our_haplo_vs_total_at_locus=0
		percent_not_our_haplo=0
		top_haplo_1_percent=0
		top_haplo_2_percent=0
		#ratio_top_2=0
		proportion_hap2=0
		
		zygosity_flag="NA"
		percent_haplo_used_for_call=0
		next_highest_percent_haplo=0
		
		#percents
		perc1_4=0
		perc2_4=0
		perc3_4=0
		perc4_4=0
		perc5_4=0
		perc6_4=0
		perc7_4=0
		perc8_4=0
		perc9_4=0
		perc10_4=0
		perc11_4=0
		perc12_4=0
		perc13_4=0
		
		perc1_5=0
		perc2_5=0
		perc3_5=0
		perc4_5=0
		perc5_5=0
		perc6_5=0
		perc7_5=0
		perc8_5=0
		perc9_5=0
		perc10_5=0
		perc11_5=0
		perc12_5=0
		perc13_5=0
		
		perc1_6=0
		perc2_6=0
		perc3_6=0
		perc4_6=0
		perc5_6=0
		perc6_6=0
		perc7_6=0
		perc8_6=0
		perc9_6=0
		perc10_6=0
		perc11_6=0
		perc12_6=0
		perc13_6=0
		
		perc1_7=0
		perc2_7=0
		perc3_7=0
		perc4_7=0
		perc5_7=0
		perc6_7=0
		perc7_7=0
		perc8_7=0
		perc9_7=0
		perc10_7=0
		perc11_7=0
		perc12_7=0
		perc13_7=0
		
		perc1_8=0
		perc2_8=0
		perc3_8=0
		perc4_8=0
		perc5_8=0
		perc6_8=0
		perc7_8=0
		perc8_8=0
		perc9_8=0
		perc10_8=0
		perc11_8=0
		perc12_8=0
		perc13_8=0
		
		perc1_9=0
		perc2_9=0
		perc3_9=0
		perc4_9=0
		perc5_9=0
		perc6_9=0
		perc7_9=0
		perc8_9=0
		perc9_9=0
		perc10_9=0
		perc11_9=0
		perc12_9=0
		perc13_9=0
		
		perc1_10=0
		perc2_10=0
		perc3_10=0
		perc4_10=0
		perc5_10=0
		perc6_10=0
		perc7_10=0
		perc8_10=0
		perc9_10=0
		perc10_10=0
		perc11_10=0
		perc12_10=0
		perc13_10=0
		
		perc1_11=0
		perc2_11=0
		perc3_11=0
		perc4_11=0
		perc5_11=0
		perc6_11=0
		perc7_11=0
		perc8_11=0
		perc9_11=0
		perc10_11=0
		perc11_11=0
		perc12_11=0
		perc13_11=0
		
		perc1_12=0
		perc2_12=0
		perc3_12=0
		perc4_12=0
		perc5_12=0
		perc6_12=0
		perc7_12=0
		perc8_12=0
		perc9_12=0
		perc10_12=0
		perc11_12=0
		perc12_12=0
		perc13_12=0
		
		perc1_13=0
		perc2_13=0
		perc3_13=0
		perc4_13=0
		perc5_13=0
		perc6_13=0
		perc7_13=0
		perc8_13=0
		perc9_13=0
		perc10_13=0
		perc11_13=0
		perc12_13=0
		perc13_13=0
		
		perc1_14=0
		perc2_14=0
		perc3_14=0
		perc4_14=0
		perc5_14=0
		perc6_14=0
		perc7_14=0
		perc8_14=0
		perc9_14=0
		perc10_14=0
		perc11_14=0
		perc12_14=0
		perc13_14=0
		
		
	else
		temp_file=$(mktemp)
		trap "rm -f $temp_file" 0 2 3 15
		
		#speed up grep: https://stackoverflow.com/questions/13913014/grepping-a-huge-file-80gb-any-way-to-speed-it-up
		#total reads that cover entire TG(x)T(y) region
		#use regexp grep to count reads that have at least 4 TGs, 1 T and at least GA 5' and AA 3'
		samtools view $R1 "chr7:117188587-117188762" | egrep 'GA(TG){4,}(T){1,}AA' - > $temp_file || :
		
		total_reads=$(cat $temp_file | wc -l)
		
		#TG4 block
		T1TG4=GATGTGTGTGTA
		T2TG4=GATGTGTGTGTTA
		T3TG4=GATGTGTGTGTTTA
		T4TG4=GATGTGTGTGTTTTA
		T5TG4=GATGTGTGTGTTTTTA
		T6TG4=GATGTGTGTGTTTTTTA
		T7TG4=GATGTGTGTGTTTTTTTA
		T8TG4=GATGTGTGTGTTTTTTTTA
		T9TG4=GATGTGTGTGTTTTTTTTTA
		T10TG4=GATGTGTGTGTTTTTTTTTTA
		T11TG4=GATGTGTGTGTTTTTTTTTTTA
		T12TG4=GATGTGTGTGTTTTTTTTTTTTA
		T13TG4=GATGTGTGTGTTTTTTTTTTTTTA
		#TG5 block
		T1TG5=GATGTGTGTGTGTA
		T2TG5=GATGTGTGTGTGTTA
		T3TG5=GATGTGTGTGTGTTTA
		T4TG5=GATGTGTGTGTGTTTTA
		T5TG5=GATGTGTGTGTGTTTTTA
		T6TG5=GATGTGTGTGTGTTTTTTA
		T7TG5=GATGTGTGTGTGTTTTTTTA
		T8TG5=GATGTGTGTGTGTTTTTTTTA
		T9TG5=GATGTGTGTGTGTTTTTTTTTA
		T10TG5=GATGTGTGTGTGTTTTTTTTTTA
		T11TG5=GATGTGTGTGTGTTTTTTTTTTTA
		T12TG5=GATGTGTGTGTGTTTTTTTTTTTTA
		T13TG5=GATGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG6 block
		T1TG6=GATGTGTGTGTGTGTA
		T2TG6=GATGTGTGTGTGTGTTA
		T3TG6=GATGTGTGTGTGTGTTTA
		T4TG6=GATGTGTGTGTGTGTTTTA
		T5TG6=GATGTGTGTGTGTGTTTTTA
		T6TG6=GATGTGTGTGTGTGTTTTTTA
		T7TG6=GATGTGTGTGTGTGTTTTTTTA
		T8TG6=GATGTGTGTGTGTGTTTTTTTTA
		T9TG6=GATGTGTGTGTGTGTTTTTTTTTA
		T10TG6=GATGTGTGTGTGTGTTTTTTTTTTA
		T11TG6=GATGTGTGTGTGTGTTTTTTTTTTTA
		T12TG6=GATGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG6=GATGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG7 block
		T1TG7=GATGTGTGTGTGTGTGTA
		T2TG7=GATGTGTGTGTGTGTGTTA
		T3TG7=GATGTGTGTGTGTGTGTTTA
		T4TG7=GATGTGTGTGTGTGTGTTTTA
		T5TG7=GATGTGTGTGTGTGTGTTTTTA
		T6TG7=GATGTGTGTGTGTGTGTTTTTTA
		T7TG7=GATGTGTGTGTGTGTGTTTTTTTA
		T8TG7=GATGTGTGTGTGTGTGTTTTTTTTA
		T9TG7=GATGTGTGTGTGTGTGTTTTTTTTTA
		T10TG7=GATGTGTGTGTGTGTGTTTTTTTTTTA
		T11TG7=GATGTGTGTGTGTGTGTTTTTTTTTTTA
		T12TG7=GATGTGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG7=GATGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG8 block
		T1TG8=GATGTGTGTGTGTGTGTGTA
		T2TG8=GATGTGTGTGTGTGTGTGTTA
		T3TG8=GATGTGTGTGTGTGTGTGTTTA
		T4TG8=GATGTGTGTGTGTGTGTGTTTTA
		T5TG8=GATGTGTGTGTGTGTGTGTTTTTA
		T6TG8=GATGTGTGTGTGTGTGTGTTTTTTA
		T7TG8=GATGTGTGTGTGTGTGTGTTTTTTTA
		T8TG8=GATGTGTGTGTGTGTGTGTTTTTTTTA
		T9TG8=GATGTGTGTGTGTGTGTGTTTTTTTTTA
		T10TG8=GATGTGTGTGTGTGTGTGTTTTTTTTTTA
		T11TG8=GATGTGTGTGTGTGTGTGTTTTTTTTTTTA
		T12TG8=GATGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG8=GATGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG9 block
		T1TG9=GATGTGTGTGTGTGTGTGTGTA
		T2TG9=GATGTGTGTGTGTGTGTGTGTTA
		T3TG9=GATGTGTGTGTGTGTGTGTGTTTA
		T4TG9=GATGTGTGTGTGTGTGTGTGTTTTA
		T5TG9=GATGTGTGTGTGTGTGTGTGTTTTTA
		T6TG9=GATGTGTGTGTGTGTGTGTGTTTTTTA
		T7TG9=GATGTGTGTGTGTGTGTGTGTTTTTTTA
		T8TG9=GATGTGTGTGTGTGTGTGTGTTTTTTTTA
		T9TG9=GATGTGTGTGTGTGTGTGTGTTTTTTTTTA
		T10TG9=GATGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		T11TG9=GATGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		T12TG9=GATGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG9=GATGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG10 block
		T1TG10=GATGTGTGTGTGTGTGTGTGTGTA
		T2TG10=GATGTGTGTGTGTGTGTGTGTGTTA
		T3TG10=GATGTGTGTGTGTGTGTGTGTGTTTA
		T4TG10=GATGTGTGTGTGTGTGTGTGTGTTTTA
		T5TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTA
		T6TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTTA
		T7TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTTTA
		T8TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		T9TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		T10TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		T11TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		T12TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG10=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG11 block
		T1TG11=GATGTGTGTGTGTGTGTGTGTGTGTA
		T2TG11=GATGTGTGTGTGTGTGTGTGTGTGTTA
		T3TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTA
		T4TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTA
		T5TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTA
		T6TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTA
		T7TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTA
		T8TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		T9TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		T10TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		T11TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		T12TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG12 block
		T1TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTA
		T2TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTA
		T3TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTA
		T4TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTA
		T5TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTA
		T6TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTA
		T7TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTA
		T8TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		T9TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		T10TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		T11TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		T12TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG13 block
		T1TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTA
		T2TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTA
		T3TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTA
		T4TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTA
		T5TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTA
		T6TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTA
		T7TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTA
		T8TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		T9TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		T10TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		T11TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		T12TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG14 block
		T1TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTA
		T2TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTA
		T3TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTA
		T4TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTA
		T5TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTA
		T6TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTA
		T7TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTA
		T8TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		T9TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		T10TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		T11TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		T12TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		T13TG14=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#counts
		count1_4=$(LC_ALL=C fgrep $T1TG4 $temp_file | wc -l)
		count2_4=$(LC_ALL=C fgrep $T2TG4 $temp_file | wc -l)
		count3_4=$(LC_ALL=C fgrep $T3TG4 $temp_file | wc -l)
		count4_4=$(LC_ALL=C fgrep $T4TG4 $temp_file | wc -l)
		count5_4=$(LC_ALL=C fgrep $T5TG4 $temp_file | wc -l)
		count6_4=$(LC_ALL=C fgrep $T6TG4 $temp_file | wc -l)
		count7_4=$(LC_ALL=C fgrep $T7TG4 $temp_file | wc -l)
		count8_4=$(LC_ALL=C fgrep $T8TG4 $temp_file | wc -l)
		count9_4=$(LC_ALL=C fgrep $T9TG4 $temp_file | wc -l)
		count10_4=$(LC_ALL=C fgrep $T10TG4 $temp_file | wc -l)
		count11_4=$(LC_ALL=C fgrep $T11TG4 $temp_file | wc -l)
		count12_4=$(LC_ALL=C fgrep $T12TG4 $temp_file | wc -l)
		count13_4=$(LC_ALL=C fgrep $T13TG4 $temp_file | wc -l)
		
		count1_5=$(LC_ALL=C fgrep $T1TG5 $temp_file | wc -l)
		count2_5=$(LC_ALL=C fgrep $T2TG5 $temp_file | wc -l)
		count3_5=$(LC_ALL=C fgrep $T3TG5 $temp_file | wc -l)
		count4_5=$(LC_ALL=C fgrep $T4TG5 $temp_file | wc -l)
		count5_5=$(LC_ALL=C fgrep $T5TG5 $temp_file | wc -l)
		count6_5=$(LC_ALL=C fgrep $T6TG5 $temp_file | wc -l)
		count7_5=$(LC_ALL=C fgrep $T7TG5 $temp_file | wc -l)
		count8_5=$(LC_ALL=C fgrep $T8TG5 $temp_file | wc -l)
		count9_5=$(LC_ALL=C fgrep $T9TG5 $temp_file | wc -l)
		count10_5=$(LC_ALL=C fgrep $T10TG5 $temp_file | wc -l)
		count11_5=$(LC_ALL=C fgrep $T11TG5 $temp_file | wc -l)
		count12_5=$(LC_ALL=C fgrep $T12TG5 $temp_file | wc -l)
		count13_5=$(LC_ALL=C fgrep $T13TG5 $temp_file | wc -l)
		
		count1_6=$(LC_ALL=C fgrep $T1TG6 $temp_file | wc -l)
		count2_6=$(LC_ALL=C fgrep $T2TG6 $temp_file | wc -l)
		count3_6=$(LC_ALL=C fgrep $T3TG6 $temp_file | wc -l)
		count4_6=$(LC_ALL=C fgrep $T4TG6 $temp_file | wc -l)
		count5_6=$(LC_ALL=C fgrep $T5TG6 $temp_file | wc -l)
		count6_6=$(LC_ALL=C fgrep $T6TG6 $temp_file | wc -l)
		count7_6=$(LC_ALL=C fgrep $T7TG6 $temp_file | wc -l)
		count8_6=$(LC_ALL=C fgrep $T8TG6 $temp_file | wc -l)
		count9_6=$(LC_ALL=C fgrep $T9TG6 $temp_file | wc -l)
		count10_6=$(LC_ALL=C fgrep $T10TG6 $temp_file | wc -l)
		count11_6=$(LC_ALL=C fgrep $T11TG6 $temp_file | wc -l)
		count12_6=$(LC_ALL=C fgrep $T12TG6 $temp_file | wc -l)
		count13_6=$(LC_ALL=C fgrep $T13TG6 $temp_file | wc -l)
		
		count1_7=$(LC_ALL=C fgrep $T1TG7 $temp_file | wc -l)
		count2_7=$(LC_ALL=C fgrep $T2TG7 $temp_file | wc -l)
		count3_7=$(LC_ALL=C fgrep $T3TG7 $temp_file | wc -l)
		count4_7=$(LC_ALL=C fgrep $T4TG7 $temp_file | wc -l)
		count5_7=$(LC_ALL=C fgrep $T5TG7 $temp_file | wc -l)
		count6_7=$(LC_ALL=C fgrep $T6TG7 $temp_file | wc -l)
		count7_7=$(LC_ALL=C fgrep $T7TG7 $temp_file | wc -l)
		count8_7=$(LC_ALL=C fgrep $T8TG7 $temp_file | wc -l)
		count9_7=$(LC_ALL=C fgrep $T9TG7 $temp_file | wc -l)
		count10_7=$(LC_ALL=C fgrep $T10TG7 $temp_file | wc -l)
		count11_7=$(LC_ALL=C fgrep $T11TG7 $temp_file | wc -l)
		count12_7=$(LC_ALL=C fgrep $T12TG7 $temp_file | wc -l)
		count13_7=$(LC_ALL=C fgrep $T13TG7 $temp_file | wc -l)
		
		count1_8=$(LC_ALL=C fgrep $T1TG8 $temp_file | wc -l)
		count2_8=$(LC_ALL=C fgrep $T2TG8 $temp_file | wc -l)
		count3_8=$(LC_ALL=C fgrep $T3TG8 $temp_file | wc -l)
		count4_8=$(LC_ALL=C fgrep $T4TG8 $temp_file | wc -l)
		count5_8=$(LC_ALL=C fgrep $T5TG8 $temp_file | wc -l)
		count6_8=$(LC_ALL=C fgrep $T6TG8 $temp_file | wc -l)
		count7_8=$(LC_ALL=C fgrep $T7TG8 $temp_file | wc -l)
		count8_8=$(LC_ALL=C fgrep $T8TG8 $temp_file | wc -l)
		count9_8=$(LC_ALL=C fgrep $T9TG8 $temp_file | wc -l)
		count10_8=$(LC_ALL=C fgrep $T10TG8 $temp_file | wc -l)
		count11_8=$(LC_ALL=C fgrep $T11TG8 $temp_file | wc -l)
		count12_8=$(LC_ALL=C fgrep $T12TG8 $temp_file | wc -l)
		count13_8=$(LC_ALL=C fgrep $T13TG8 $temp_file | wc -l)
		
		count1_9=$(LC_ALL=C fgrep $T1TG9 $temp_file | wc -l)
		count2_9=$(LC_ALL=C fgrep $T2TG9 $temp_file | wc -l)
		count3_9=$(LC_ALL=C fgrep $T3TG9 $temp_file | wc -l)
		count4_9=$(LC_ALL=C fgrep $T4TG9 $temp_file | wc -l)
		count5_9=$(LC_ALL=C fgrep $T5TG9 $temp_file | wc -l)
		count6_9=$(LC_ALL=C fgrep $T6TG9 $temp_file | wc -l)
		count7_9=$(LC_ALL=C fgrep $T7TG9 $temp_file | wc -l)
		count8_9=$(LC_ALL=C fgrep $T8TG9 $temp_file | wc -l)
		count9_9=$(LC_ALL=C fgrep $T9TG9 $temp_file | wc -l)
		count10_9=$(LC_ALL=C fgrep $T10TG9 $temp_file | wc -l)
		count11_9=$(LC_ALL=C fgrep $T11TG9 $temp_file | wc -l)
		count12_9=$(LC_ALL=C fgrep $T12TG9 $temp_file | wc -l)
		count13_9=$(LC_ALL=C fgrep $T13TG9 $temp_file | wc -l)
		
		count1_10=$(LC_ALL=C fgrep $T1TG10 $temp_file | wc -l)
		count2_10=$(LC_ALL=C fgrep $T2TG10 $temp_file | wc -l)
		count3_10=$(LC_ALL=C fgrep $T3TG10 $temp_file | wc -l)
		count4_10=$(LC_ALL=C fgrep $T4TG10 $temp_file | wc -l)
		count5_10=$(LC_ALL=C fgrep $T5TG10 $temp_file | wc -l)
		count6_10=$(LC_ALL=C fgrep $T6TG10 $temp_file | wc -l)
		count7_10=$(LC_ALL=C fgrep $T7TG10 $temp_file | wc -l)
		count8_10=$(LC_ALL=C fgrep $T8TG10 $temp_file | wc -l)
		count9_10=$(LC_ALL=C fgrep $T9TG10 $temp_file | wc -l)
		count10_10=$(LC_ALL=C fgrep $T10TG10 $temp_file | wc -l)
		count11_10=$(LC_ALL=C fgrep $T11TG10 $temp_file | wc -l)
		count12_10=$(LC_ALL=C fgrep $T12TG10 $temp_file | wc -l)
		count13_10=$(LC_ALL=C fgrep $T13TG10 $temp_file | wc -l)
		
		count1_11=$(LC_ALL=C fgrep $T1TG11 $temp_file | wc -l)
		count2_11=$(LC_ALL=C fgrep $T2TG11 $temp_file | wc -l)
		count3_11=$(LC_ALL=C fgrep $T3TG11 $temp_file | wc -l)
		count4_11=$(LC_ALL=C fgrep $T4TG11 $temp_file | wc -l)
		count5_11=$(LC_ALL=C fgrep $T5TG11 $temp_file | wc -l)
		count6_11=$(LC_ALL=C fgrep $T6TG11 $temp_file | wc -l)
		count7_11=$(LC_ALL=C fgrep $T7TG11 $temp_file | wc -l)
		count8_11=$(LC_ALL=C fgrep $T8TG11 $temp_file | wc -l)
		count9_11=$(LC_ALL=C fgrep $T9TG11 $temp_file | wc -l)
		count10_11=$(LC_ALL=C fgrep $T10TG11 $temp_file | wc -l)
		count11_11=$(LC_ALL=C fgrep $T11TG11 $temp_file | wc -l)
		count12_11=$(LC_ALL=C fgrep $T12TG11 $temp_file | wc -l)
		count13_11=$(LC_ALL=C fgrep $T13TG11 $temp_file | wc -l)
		
		count1_12=$(LC_ALL=C fgrep $T1TG12 $temp_file | wc -l)
		count2_12=$(LC_ALL=C fgrep $T2TG12 $temp_file | wc -l)
		count3_12=$(LC_ALL=C fgrep $T3TG12 $temp_file | wc -l)
		count4_12=$(LC_ALL=C fgrep $T4TG12 $temp_file | wc -l)
		count5_12=$(LC_ALL=C fgrep $T5TG12 $temp_file | wc -l)
		count6_12=$(LC_ALL=C fgrep $T6TG12 $temp_file | wc -l)
		count7_12=$(LC_ALL=C fgrep $T7TG12 $temp_file | wc -l)
		count8_12=$(LC_ALL=C fgrep $T8TG12 $temp_file | wc -l)
		count9_12=$(LC_ALL=C fgrep $T9TG12 $temp_file | wc -l)
		count10_12=$(LC_ALL=C fgrep $T10TG12 $temp_file | wc -l)
		count11_12=$(LC_ALL=C fgrep $T11TG12 $temp_file | wc -l)
		count12_12=$(LC_ALL=C fgrep $T12TG12 $temp_file | wc -l)
		count13_12=$(LC_ALL=C fgrep $T13TG12 $temp_file | wc -l)
		
		count1_13=$(LC_ALL=C fgrep $T1TG13 $temp_file | wc -l)
		count2_13=$(LC_ALL=C fgrep $T2TG13 $temp_file | wc -l)
		count3_13=$(LC_ALL=C fgrep $T3TG13 $temp_file | wc -l)
		count4_13=$(LC_ALL=C fgrep $T4TG13 $temp_file | wc -l)
		count5_13=$(LC_ALL=C fgrep $T5TG13 $temp_file | wc -l)
		count6_13=$(LC_ALL=C fgrep $T6TG13 $temp_file | wc -l)
		count7_13=$(LC_ALL=C fgrep $T7TG13 $temp_file | wc -l)
		count8_13=$(LC_ALL=C fgrep $T8TG13 $temp_file | wc -l)
		count9_13=$(LC_ALL=C fgrep $T9TG13 $temp_file | wc -l)
		count10_13=$(LC_ALL=C fgrep $T10TG13 $temp_file | wc -l)
		count11_13=$(LC_ALL=C fgrep $T11TG13 $temp_file | wc -l)
		count12_13=$(LC_ALL=C fgrep $T12TG13 $temp_file | wc -l)
		count13_13=$(LC_ALL=C fgrep $T13TG13 $temp_file | wc -l)
		
		count1_14=$(LC_ALL=C fgrep $T1TG14 $temp_file | wc -l)
		count2_14=$(LC_ALL=C fgrep $T2TG14 $temp_file | wc -l)
		count3_14=$(LC_ALL=C fgrep $T3TG14 $temp_file | wc -l)
		count4_14=$(LC_ALL=C fgrep $T4TG14 $temp_file | wc -l)
		count5_14=$(LC_ALL=C fgrep $T5TG14 $temp_file | wc -l)
		count6_14=$(LC_ALL=C fgrep $T6TG14 $temp_file | wc -l)
		count7_14=$(LC_ALL=C fgrep $T7TG14 $temp_file | wc -l)
		count8_14=$(LC_ALL=C fgrep $T8TG14 $temp_file | wc -l)
		count9_14=$(LC_ALL=C fgrep $T9TG14 $temp_file | wc -l)
		count10_14=$(LC_ALL=C fgrep $T10TG14 $temp_file | wc -l)
		count11_14=$(LC_ALL=C fgrep $T11TG14 $temp_file | wc -l)
		count12_14=$(LC_ALL=C fgrep $T12TG14 $temp_file | wc -l)
		count13_14=$(LC_ALL=C fgrep $T13TG14 $temp_file | wc -l)
		
		top_haplo_1_name=""
		top_haplo_2_name=""
		#total
		sum_our_haplo=$((count1_4+count2_4+count3_4+count4_4+count5_4+count6_4+count7_4+count8_4+count9_4+count10_4+count11_4+count12_4+count13_4+count1_5+count2_5+count3_5+count4_5+count5_5+count6_5+count7_5+count8_5+count9_5+count10_5+count11_5+count12_5+count13_5+count1_6+count2_6+count3_6+count4_6+count5_6+count6_6+count7_6+count8_6+count9_6+count10_6+count11_6+count12_6+count13_6+count1_7+count2_7+count3_7+count4_7+count5_7+count6_7+count7_7+count8_7+count9_7+count10_7+count11_7+count12_7+count13_7+count1_8+count2_8+count3_8+count4_8+count5_8+count6_8+count7_8+count8_8+count9_8+count10_8+count11_8+count12_8+count13_8+count1_9+count2_9+count3_9+count4_9+count5_9+count6_9+count7_9+count8_9+count9_9+count10_9+count11_9+count12_9+count13_9+count1_10+count2_10+count3_10+count4_10+count5_10+count6_10+count7_10+count8_10+count9_10+count10_10+count11_10+count12_10+count13_10+count1_11+count2_11+count3_11+count4_11+count5_11+count6_11+count7_11+count8_11+count9_11+count10_11+count11_11+count12_11+count13_11+count1_12+count2_12+count3_12+count4_12+count5_12+count6_12+count7_12+count8_12+count9_12+count10_12+count11_12+count12_12+count13_12+count1_13+count2_13+count3_13+count4_13+count5_13+count6_13+count7_13+count8_13+count9_13+count10_13+count11_13+count12_13+count13_13+count1_14+count2_14+count3_14+count4_14+count5_14+count6_14+count7_14+count8_14+count9_14+count10_14+count11_14+count12_14+count13_14))
		percent_our_haplo_vs_total_at_locus=0
		percent_not_our_haplo=0
		top_haplo_1_percent=0
		top_haplo_2_percent=0
		#ratio_top_2=0
		proportion_hap2=0
		#need to check if we have less than 10 reads at locus.
		if [ "$total_reads" -lt 10 ]; then
			top_haplo_1_name="Less_than_10_reads_FAIL"
			top_haplo_2_name="Less_than_10_reads_FAIL"
			top_haplo_1_count=0
			top_haplo_2_count=0
			
			#percents
			perc1_4=0
			perc2_4=0
			perc3_4=0
			perc4_4=0
			perc5_4=0
			perc6_4=0
			perc7_4=0
			perc8_4=0
			perc9_4=0
			perc10_4=0
			perc11_4=0
			perc12_4=0
			perc13_4=0
			
			perc1_5=0
			perc2_5=0
			perc3_5=0
			perc4_5=0
			perc5_5=0
			perc6_5=0
			perc7_5=0
			perc8_5=0
			perc9_5=0
			perc10_5=0
			perc11_5=0
			perc12_5=0
			perc13_5=0
			
			perc1_6=0
			perc2_6=0
			perc3_6=0
			perc4_6=0
			perc5_6=0
			perc6_6=0
			perc7_6=0
			perc8_6=0
			perc9_6=0
			perc10_6=0
			perc11_6=0
			perc12_6=0
			perc13_6=0
			
			perc1_7=0
			perc2_7=0
			perc3_7=0
			perc4_7=0
			perc5_7=0
			perc6_7=0
			perc7_7=0
			perc8_7=0
			perc9_7=0
			perc10_7=0
			perc11_7=0
			perc12_7=0
			perc13_7=0
			
			perc1_8=0
			perc2_8=0
			perc3_8=0
			perc4_8=0
			perc5_8=0
			perc6_8=0
			perc7_8=0
			perc8_8=0
			perc9_8=0
			perc10_8=0
			perc11_8=0
			perc12_8=0
			perc13_8=0
			
			perc1_9=0
			perc2_9=0
			perc3_9=0
			perc4_9=0
			perc5_9=0
			perc6_9=0
			perc7_9=0
			perc8_9=0
			perc9_9=0
			perc10_9=0
			perc11_9=0
			perc12_9=0
			perc13_9=0
			
			perc1_10=0
			perc2_10=0
			perc3_10=0
			perc4_10=0
			perc5_10=0
			perc6_10=0
			perc7_10=0
			perc8_10=0
			perc9_10=0
			perc10_10=0
			perc11_10=0
			perc12_10=0
			perc13_10=0
			
			perc1_11=0
			perc2_11=0
			perc3_11=0
			perc4_11=0
			perc5_11=0
			perc6_11=0
			perc7_11=0
			perc8_11=0
			perc9_11=0
			perc10_11=0
			perc11_11=0
			perc12_11=0
			perc13_11=0
			
			perc1_12=0
			perc2_12=0
			perc3_12=0
			perc4_12=0
			perc5_12=0
			perc6_12=0
			perc7_12=0
			perc8_12=0
			perc9_12=0
			perc10_12=0
			perc11_12=0
			perc12_12=0
			perc13_12=0
			
			perc1_13=0
			perc2_13=0
			perc3_13=0
			perc4_13=0
			perc5_13=0
			perc6_13=0
			perc7_13=0
			perc8_13=0
			perc9_13=0
			perc10_13=0
			perc11_13=0
			perc12_13=0
			perc13_13=0
			
			perc1_14=0
			perc2_14=0
			perc3_14=0
			perc4_14=0
			perc5_14=0
			perc6_14=0
			perc7_14=0
			perc8_14=0
			perc9_14=0
			perc10_14=0
			perc11_14=0
			perc12_14=0
			perc13_14=0
		
			zygosity_flag="NA"
			percent_haplo_used_for_call=0
			next_highest_percent_haplo=0
		#check that sum_our_haplo doesn't = 0 before we divide by it.
		elif [ "$sum_our_haplo" -eq 0 ]; then
			top_haplo_1_name="no_reads_match_a_haplotype_we_search_for"
			top_haplo_2_name="no_reads_match_a_haplotype_we_search_for"
			top_haplo_1_count=0
			top_haplo_2_count=0
			#percents
			perc1_4=0
			perc2_4=0
			perc3_4=0
			perc4_4=0
			perc5_4=0
			perc6_4=0
			perc7_4=0
			perc8_4=0
			perc9_4=0
			perc10_4=0
			perc11_4=0
			perc12_4=0
			perc13_4=0
			
			perc1_5=0
			perc2_5=0
			perc3_5=0
			perc4_5=0
			perc5_5=0
			perc6_5=0
			perc7_5=0
			perc8_5=0
			perc9_5=0
			perc10_5=0
			perc11_5=0
			perc12_5=0
			perc13_5=0
			
			perc1_6=0
			perc2_6=0
			perc3_6=0
			perc4_6=0
			perc5_6=0
			perc6_6=0
			perc7_6=0
			perc8_6=0
			perc9_6=0
			perc10_6=0
			perc11_6=0
			perc12_6=0
			perc13_6=0
			
			perc1_7=0
			perc2_7=0
			perc3_7=0
			perc4_7=0
			perc5_7=0
			perc6_7=0
			perc7_7=0
			perc8_7=0
			perc9_7=0
			perc10_7=0
			perc11_7=0
			perc12_7=0
			perc13_7=0
			
			perc1_8=0
			perc2_8=0
			perc3_8=0
			perc4_8=0
			perc5_8=0
			perc6_8=0
			perc7_8=0
			perc8_8=0
			perc9_8=0
			perc10_8=0
			perc11_8=0
			perc12_8=0
			perc13_8=0
			
			perc1_9=0
			perc2_9=0
			perc3_9=0
			perc4_9=0
			perc5_9=0
			perc6_9=0
			perc7_9=0
			perc8_9=0
			perc9_9=0
			perc10_9=0
			perc11_9=0
			perc12_9=0
			perc13_9=0
			
			perc1_10=0
			perc2_10=0
			perc3_10=0
			perc4_10=0
			perc5_10=0
			perc6_10=0
			perc7_10=0
			perc8_10=0
			perc9_10=0
			perc10_10=0
			perc11_10=0
			perc12_10=0
			perc13_10=0
			
			perc1_11=0
			perc2_11=0
			perc3_11=0
			perc4_11=0
			perc5_11=0
			perc6_11=0
			perc7_11=0
			perc8_11=0
			perc9_11=0
			perc10_11=0
			perc11_11=0
			perc12_11=0
			perc13_11=0
			
			perc1_12=0
			perc2_12=0
			perc3_12=0
			perc4_12=0
			perc5_12=0
			perc6_12=0
			perc7_12=0
			perc8_12=0
			perc9_12=0
			perc10_12=0
			perc11_12=0
			perc12_12=0
			perc13_12=0
			
			perc1_13=0
			perc2_13=0
			perc3_13=0
			perc4_13=0
			perc5_13=0
			perc6_13=0
			perc7_13=0
			perc8_13=0
			perc9_13=0
			perc10_13=0
			perc11_13=0
			perc12_13=0
			perc13_13=0
			
			perc1_14=0
			perc2_14=0
			perc3_14=0
			perc4_14=0
			perc5_14=0
			perc6_14=0
			perc7_14=0
			perc8_14=0
			perc9_14=0
			perc10_14=0
			perc11_14=0
			perc12_14=0
			perc13_14=0
		
			zygosity_flag="NA"
			percent_haplo_used_for_call=0
			next_highest_percent_haplo=0
		#otherwise we're good to divide
		else
			#percents
			printf -v perc1_4 "%0.0f" $(bc -l <<< "($count1_4/$sum_our_haplo) * 100")
			printf -v perc2_4 "%0.0f" $(bc -l <<< "($count2_4/$sum_our_haplo) * 100")
			printf -v perc3_4 "%0.0f" $(bc -l <<< "($count3_4/$sum_our_haplo) * 100")
			printf -v perc4_4 "%0.0f" $(bc -l <<< "($count4_4/$sum_our_haplo) * 100")
			printf -v perc5_4 "%0.0f" $(bc -l <<< "($count5_4/$sum_our_haplo) * 100")
			printf -v perc6_4 "%0.0f" $(bc -l <<< "($count6_4/$sum_our_haplo) * 100")
			printf -v perc7_4 "%0.0f" $(bc -l <<< "($count7_4/$sum_our_haplo) * 100")
			printf -v perc8_4 "%0.0f" $(bc -l <<< "($count8_4/$sum_our_haplo) * 100")
			printf -v perc9_4 "%0.0f" $(bc -l <<< "($count9_4/$sum_our_haplo) * 100")
			printf -v perc10_4 "%0.0f" $(bc -l <<< "($count10_4/$sum_our_haplo) * 100")
			printf -v perc11_4 "%0.0f" $(bc -l <<< "($count11_4/$sum_our_haplo) * 100")
			printf -v perc12_4 "%0.0f" $(bc -l <<< "($count12_4/$sum_our_haplo) * 100")
			printf -v perc13_4 "%0.0f" $(bc -l <<< "($count13_4/$sum_our_haplo) * 100")
			
			printf -v perc1_5 "%0.0f" $(bc -l <<< "($count1_5/$sum_our_haplo) * 100")
			printf -v perc2_5 "%0.0f" $(bc -l <<< "($count2_5/$sum_our_haplo) * 100")
			printf -v perc3_5 "%0.0f" $(bc -l <<< "($count3_5/$sum_our_haplo) * 100")
			printf -v perc4_5 "%0.0f" $(bc -l <<< "($count4_5/$sum_our_haplo) * 100")
			printf -v perc5_5 "%0.0f" $(bc -l <<< "($count5_5/$sum_our_haplo) * 100")
			printf -v perc6_5 "%0.0f" $(bc -l <<< "($count6_5/$sum_our_haplo) * 100")
			printf -v perc7_5 "%0.0f" $(bc -l <<< "($count7_5/$sum_our_haplo) * 100")
			printf -v perc8_5 "%0.0f" $(bc -l <<< "($count8_5/$sum_our_haplo) * 100")
			printf -v perc9_5 "%0.0f" $(bc -l <<< "($count9_5/$sum_our_haplo) * 100")
			printf -v perc10_5 "%0.0f" $(bc -l <<< "($count10_5/$sum_our_haplo) * 100")
			printf -v perc11_5 "%0.0f" $(bc -l <<< "($count11_5/$sum_our_haplo) * 100")
			printf -v perc12_5 "%0.0f" $(bc -l <<< "($count12_5/$sum_our_haplo) * 100")
			printf -v perc13_5 "%0.0f" $(bc -l <<< "($count13_5/$sum_our_haplo) * 100")
			
			printf -v perc1_6 "%0.0f" $(bc -l <<< "($count1_6/$sum_our_haplo) * 100")
			printf -v perc2_6 "%0.0f" $(bc -l <<< "($count2_6/$sum_our_haplo) * 100")
			printf -v perc3_6 "%0.0f" $(bc -l <<< "($count3_6/$sum_our_haplo) * 100")
			printf -v perc4_6 "%0.0f" $(bc -l <<< "($count4_6/$sum_our_haplo) * 100")
			printf -v perc5_6 "%0.0f" $(bc -l <<< "($count5_6/$sum_our_haplo) * 100")
			printf -v perc6_6 "%0.0f" $(bc -l <<< "($count6_6/$sum_our_haplo) * 100")
			printf -v perc7_6 "%0.0f" $(bc -l <<< "($count7_6/$sum_our_haplo) * 100")
			printf -v perc8_6 "%0.0f" $(bc -l <<< "($count8_6/$sum_our_haplo) * 100")
			printf -v perc9_6 "%0.0f" $(bc -l <<< "($count9_6/$sum_our_haplo) * 100")
			printf -v perc10_6 "%0.0f" $(bc -l <<< "($count10_6/$sum_our_haplo) * 100")
			printf -v perc11_6 "%0.0f" $(bc -l <<< "($count11_6/$sum_our_haplo) * 100")
			printf -v perc12_6 "%0.0f" $(bc -l <<< "($count12_6/$sum_our_haplo) * 100")
			printf -v perc13_6 "%0.0f" $(bc -l <<< "($count13_6/$sum_our_haplo) * 100")
			
			printf -v perc1_7 "%0.0f" $(bc -l <<< "($count1_7/$sum_our_haplo) * 100")
			printf -v perc2_7 "%0.0f" $(bc -l <<< "($count2_7/$sum_our_haplo) * 100")
			printf -v perc3_7 "%0.0f" $(bc -l <<< "($count3_7/$sum_our_haplo) * 100")
			printf -v perc4_7 "%0.0f" $(bc -l <<< "($count4_7/$sum_our_haplo) * 100")
			printf -v perc5_7 "%0.0f" $(bc -l <<< "($count5_7/$sum_our_haplo) * 100")
			printf -v perc6_7 "%0.0f" $(bc -l <<< "($count6_7/$sum_our_haplo) * 100")
			printf -v perc7_7 "%0.0f" $(bc -l <<< "($count7_7/$sum_our_haplo) * 100")
			printf -v perc8_7 "%0.0f" $(bc -l <<< "($count8_7/$sum_our_haplo) * 100")
			printf -v perc9_7 "%0.0f" $(bc -l <<< "($count9_7/$sum_our_haplo) * 100")
			printf -v perc10_7 "%0.0f" $(bc -l <<< "($count10_7/$sum_our_haplo) * 100")
			printf -v perc11_7 "%0.0f" $(bc -l <<< "($count11_7/$sum_our_haplo) * 100")
			printf -v perc12_7 "%0.0f" $(bc -l <<< "($count12_7/$sum_our_haplo) * 100")
			printf -v perc13_7 "%0.0f" $(bc -l <<< "($count13_7/$sum_our_haplo) * 100")
			
			printf -v perc1_8 "%0.0f" $(bc -l <<< "($count1_8/$sum_our_haplo) * 100")
			printf -v perc2_8 "%0.0f" $(bc -l <<< "($count2_8/$sum_our_haplo) * 100")
			printf -v perc3_8 "%0.0f" $(bc -l <<< "($count3_8/$sum_our_haplo) * 100")
			printf -v perc4_8 "%0.0f" $(bc -l <<< "($count4_8/$sum_our_haplo) * 100")
			printf -v perc5_8 "%0.0f" $(bc -l <<< "($count5_8/$sum_our_haplo) * 100")
			printf -v perc6_8 "%0.0f" $(bc -l <<< "($count6_8/$sum_our_haplo) * 100")
			printf -v perc7_8 "%0.0f" $(bc -l <<< "($count7_8/$sum_our_haplo) * 100")
			printf -v perc8_8 "%0.0f" $(bc -l <<< "($count8_8/$sum_our_haplo) * 100")
			printf -v perc9_8 "%0.0f" $(bc -l <<< "($count9_8/$sum_our_haplo) * 100")
			printf -v perc10_8 "%0.0f" $(bc -l <<< "($count10_8/$sum_our_haplo) * 100")
			printf -v perc11_8 "%0.0f" $(bc -l <<< "($count11_8/$sum_our_haplo) * 100")
			printf -v perc12_8 "%0.0f" $(bc -l <<< "($count12_8/$sum_our_haplo) * 100")
			printf -v perc13_8 "%0.0f" $(bc -l <<< "($count13_8/$sum_our_haplo) * 100")
			
			printf -v perc1_9 "%0.0f" $(bc -l <<< "($count1_9/$sum_our_haplo) * 100")
			printf -v perc2_9 "%0.0f" $(bc -l <<< "($count2_9/$sum_our_haplo) * 100")
			printf -v perc3_9 "%0.0f" $(bc -l <<< "($count3_9/$sum_our_haplo) * 100")
			printf -v perc4_9 "%0.0f" $(bc -l <<< "($count4_9/$sum_our_haplo) * 100")
			printf -v perc5_9 "%0.0f" $(bc -l <<< "($count5_9/$sum_our_haplo) * 100")
			printf -v perc6_9 "%0.0f" $(bc -l <<< "($count6_9/$sum_our_haplo) * 100")
			printf -v perc7_9 "%0.0f" $(bc -l <<< "($count7_9/$sum_our_haplo) * 100")
			printf -v perc8_9 "%0.0f" $(bc -l <<< "($count8_9/$sum_our_haplo) * 100")
			printf -v perc9_9 "%0.0f" $(bc -l <<< "($count9_9/$sum_our_haplo) * 100")
			printf -v perc10_9 "%0.0f" $(bc -l <<< "($count10_9/$sum_our_haplo) * 100")
			printf -v perc11_9 "%0.0f" $(bc -l <<< "($count11_9/$sum_our_haplo) * 100")
			printf -v perc12_9 "%0.0f" $(bc -l <<< "($count12_9/$sum_our_haplo) * 100")
			printf -v perc13_9 "%0.0f" $(bc -l <<< "($count13_9/$sum_our_haplo) * 100")
			
			printf -v perc1_10 "%0.0f" $(bc -l <<< "($count1_10/$sum_our_haplo) * 100")
			printf -v perc2_10 "%0.0f" $(bc -l <<< "($count2_10/$sum_our_haplo) * 100")
			printf -v perc3_10 "%0.0f" $(bc -l <<< "($count3_10/$sum_our_haplo) * 100")
			printf -v perc4_10 "%0.0f" $(bc -l <<< "($count4_10/$sum_our_haplo) * 100")
			printf -v perc5_10 "%0.0f" $(bc -l <<< "($count5_10/$sum_our_haplo) * 100")
			printf -v perc6_10 "%0.0f" $(bc -l <<< "($count6_10/$sum_our_haplo) * 100")
			printf -v perc7_10 "%0.0f" $(bc -l <<< "($count7_10/$sum_our_haplo) * 100")
			printf -v perc8_10 "%0.0f" $(bc -l <<< "($count8_10/$sum_our_haplo) * 100")
			printf -v perc9_10 "%0.0f" $(bc -l <<< "($count9_10/$sum_our_haplo) * 100")
			printf -v perc10_10 "%0.0f" $(bc -l <<< "($count10_10/$sum_our_haplo) * 100")
			printf -v perc11_10 "%0.0f" $(bc -l <<< "($count11_10/$sum_our_haplo) * 100")
			printf -v perc12_10 "%0.0f" $(bc -l <<< "($count12_10/$sum_our_haplo) * 100")
			printf -v perc13_10 "%0.0f" $(bc -l <<< "($count13_10/$sum_our_haplo) * 100")
			
			printf -v perc1_11 "%0.0f" $(bc -l <<< "($count1_11/$sum_our_haplo) * 100")
			printf -v perc2_11 "%0.0f" $(bc -l <<< "($count2_11/$sum_our_haplo) * 100")
			printf -v perc3_11 "%0.0f" $(bc -l <<< "($count3_11/$sum_our_haplo) * 100")
			printf -v perc4_11 "%0.0f" $(bc -l <<< "($count4_11/$sum_our_haplo) * 100")
			printf -v perc5_11 "%0.0f" $(bc -l <<< "($count5_11/$sum_our_haplo) * 100")
			printf -v perc6_11 "%0.0f" $(bc -l <<< "($count6_11/$sum_our_haplo) * 100")
			printf -v perc7_11 "%0.0f" $(bc -l <<< "($count7_11/$sum_our_haplo) * 100")
			printf -v perc8_11 "%0.0f" $(bc -l <<< "($count8_11/$sum_our_haplo) * 100")
			printf -v perc9_11 "%0.0f" $(bc -l <<< "($count9_11/$sum_our_haplo) * 100")
			printf -v perc10_11 "%0.0f" $(bc -l <<< "($count10_11/$sum_our_haplo) * 100")
			printf -v perc11_11 "%0.0f" $(bc -l <<< "($count11_11/$sum_our_haplo) * 100")
			printf -v perc12_11 "%0.0f" $(bc -l <<< "($count12_11/$sum_our_haplo) * 100")
			printf -v perc13_11 "%0.0f" $(bc -l <<< "($count13_11/$sum_our_haplo) * 100")
			
			printf -v perc1_12 "%0.0f" $(bc -l <<< "($count1_12/$sum_our_haplo) * 100")
			printf -v perc2_12 "%0.0f" $(bc -l <<< "($count2_12/$sum_our_haplo) * 100")
			printf -v perc3_12 "%0.0f" $(bc -l <<< "($count3_12/$sum_our_haplo) * 100")
			printf -v perc4_12 "%0.0f" $(bc -l <<< "($count4_12/$sum_our_haplo) * 100")
			printf -v perc5_12 "%0.0f" $(bc -l <<< "($count5_12/$sum_our_haplo) * 100")
			printf -v perc6_12 "%0.0f" $(bc -l <<< "($count6_12/$sum_our_haplo) * 100")
			printf -v perc7_12 "%0.0f" $(bc -l <<< "($count7_12/$sum_our_haplo) * 100")
			printf -v perc8_12 "%0.0f" $(bc -l <<< "($count8_12/$sum_our_haplo) * 100")
			printf -v perc9_12 "%0.0f" $(bc -l <<< "($count9_12/$sum_our_haplo) * 100")
			printf -v perc10_12 "%0.0f" $(bc -l <<< "($count10_12/$sum_our_haplo) * 100")
			printf -v perc11_12 "%0.0f" $(bc -l <<< "($count11_12/$sum_our_haplo) * 100")
			printf -v perc12_12 "%0.0f" $(bc -l <<< "($count12_12/$sum_our_haplo) * 100")
			printf -v perc13_12 "%0.0f" $(bc -l <<< "($count13_12/$sum_our_haplo) * 100")
			
			printf -v perc1_13 "%0.0f" $(bc -l <<< "($count1_13/$sum_our_haplo) * 100")
			printf -v perc2_13 "%0.0f" $(bc -l <<< "($count2_13/$sum_our_haplo) * 100")
			printf -v perc3_13 "%0.0f" $(bc -l <<< "($count3_13/$sum_our_haplo) * 100")
			printf -v perc4_13 "%0.0f" $(bc -l <<< "($count4_13/$sum_our_haplo) * 100")
			printf -v perc5_13 "%0.0f" $(bc -l <<< "($count5_13/$sum_our_haplo) * 100")
			printf -v perc6_13 "%0.0f" $(bc -l <<< "($count6_13/$sum_our_haplo) * 100")
			printf -v perc7_13 "%0.0f" $(bc -l <<< "($count7_13/$sum_our_haplo) * 100")
			printf -v perc8_13 "%0.0f" $(bc -l <<< "($count8_13/$sum_our_haplo) * 100")
			printf -v perc9_13 "%0.0f" $(bc -l <<< "($count9_13/$sum_our_haplo) * 100")
			printf -v perc10_13 "%0.0f" $(bc -l <<< "($count10_13/$sum_our_haplo) * 100")
			printf -v perc11_13 "%0.0f" $(bc -l <<< "($count11_13/$sum_our_haplo) * 100")
			printf -v perc12_13 "%0.0f" $(bc -l <<< "($count12_13/$sum_our_haplo) * 100")
			printf -v perc13_13 "%0.0f" $(bc -l <<< "($count13_13/$sum_our_haplo) * 100")
			
			printf -v perc1_14 "%0.0f" $(bc -l <<< "($count1_14/$sum_our_haplo) * 100")
			printf -v perc2_14 "%0.0f" $(bc -l <<< "($count2_14/$sum_our_haplo) * 100")
			printf -v perc3_14 "%0.0f" $(bc -l <<< "($count3_14/$sum_our_haplo) * 100")
			printf -v perc4_14 "%0.0f" $(bc -l <<< "($count4_14/$sum_our_haplo) * 100")
			printf -v perc5_14 "%0.0f" $(bc -l <<< "($count5_14/$sum_our_haplo) * 100")
			printf -v perc6_14 "%0.0f" $(bc -l <<< "($count6_14/$sum_our_haplo) * 100")
			printf -v perc7_14 "%0.0f" $(bc -l <<< "($count7_14/$sum_our_haplo) * 100")
			printf -v perc8_14 "%0.0f" $(bc -l <<< "($count8_14/$sum_our_haplo) * 100")
			printf -v perc9_14 "%0.0f" $(bc -l <<< "($count9_14/$sum_our_haplo) * 100")
			printf -v perc10_14 "%0.0f" $(bc -l <<< "($count10_14/$sum_our_haplo) * 100")
			printf -v perc11_14 "%0.0f" $(bc -l <<< "($count11_14/$sum_our_haplo) * 100")
			printf -v perc12_14 "%0.0f" $(bc -l <<< "($count12_14/$sum_our_haplo) * 100")
			printf -v perc13_14 "%0.0f" $(bc -l <<< "($count13_14/$sum_our_haplo) * 100")
			
			temp_file2=$(mktemp)
			trap "rm -f $temp_file2" 0 2 3 15
			printf "%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n" $count1_4 "1T-4TG" $count2_4 "2T-4TG" $count3_4 "3T-4TG" $count4_4 "4T-4TG" $count5_4 "5T-4TG" $count6_4 "6T-4TG" $count7_4 "7T-4TG" $count8_4 "8T-4TG" $count9_4 "9T-4TG" $count10_4 "10T-4TG" $count11_4 "11T-4TG" $count12_4 "12T-4TG" $count13_4 "13T-4TG" $count1_5 "1T-5TG" $count2_5 "2T-5TG" $count3_5 "3T-5TG" $count4_5 "4T-5TG" $count5_5 "5T-5TG" $count6_5 "6T-5TG" $count7_5 "7T-5TG" $count8_5 "8T-5TG" $count9_5 "9T-5TG" $count10_5 "10T-5TG" $count11_5 "11T-5TG" $count12_5 "12T-5TG" $count13_5 "13T-5TG" $count1_6 "1T-6TG" $count2_6 "2T-6TG" $count3_6 "3T-6TG" $count4_6 "4T-6TG" $count5_6 "5T-6TG" $count6_6 "6T-6TG" $count7_6 "7T-6TG" $count8_6 "8T-6TG" $count9_6 "9T-6TG" $count10_6 "10T-6TG" $count11_6 "11T-6TG" $count12_6 "12T-6TG" $count13_6 "13T-6TG" $count1_7 "1T-7TG" $count2_7 "2T-7TG" $count3_7 "3T-7TG" $count4_7 "4T-7TG" $count5_7 "5T-7TG" $count6_7 "6T-7TG" $count7_7 "7T-7TG" $count8_7 "8T-7TG" $count9_7 "9T-7TG" $count10_7 "10T-7TG" $count11_7 "11T-7TG" $count12_7 "12T-7TG" $count13_7 "13T-7TG" $count1_8 "1T-8TG" $count2_8 "2T-8TG" $count3_8 "3T-8TG" $count4_8 "4T-8TG" $count5_8 "5T-8TG" $count6_8 "6T-8TG" $count7_8 "7T-8TG" $count8_8 "8T-8TG" $count9_8 "9T-8TG" $count10_8 "10T-8TG" $count11_8 "11T-8TG" $count12_8 "12T-8TG" $count13_8 "13T-8TG" $count1_9 "1T-9TG" $count2_9 "2T-9TG" $count3_9 "3T-9TG" $count4_9 "4T-9TG" $count5_9 "5T-9TG" $count6_9 "6T-9TG" $count7_9 "7T-9TG" $count8_9 "8T-9TG" $count9_9 "9T-9TG" $count10_9 "10T-9TG" $count11_9 "11T-9TG" $count12_9 "12T-9TG" $count13_9 "13T-9TG" $count1_10 "1T-10TG" $count2_10 "2T-10TG" $count3_10 "3T-10TG" $count4_10 "4T-10TG" $count5_10 "5T-10TG" $count6_10 "6T-10TG" $count7_10 "7T-10TG" $count8_10 "8T-10TG" $count9_10 "9T-10TG" $count10_10 "10T-10TG" $count11_10 "11T-10TG" $count12_10 "12T-10TG" $count13_10 "13T-10TG" $count1_11 "1T-11TG" $count2_11 "2T-11TG" $count3_11 "3T-11TG" $count4_11 "4T-11TG" $count5_11 "5T-11TG" $count6_11 "6T-11TG" $count7_11 "7T-11TG" $count8_11 "8T-11TG" $count9_11 "9T-11TG" $count10_11 "10T-11TG" $count11_11 "11T-11TG" $count12_11 "12T-11TG" $count13_11 "13T-11TG" $count1_12 "1T-12TG" $count2_12 "2T-12TG" $count3_12 "3T-12TG" $count4_12 "4T-12TG" $count5_12 "5T-12TG" $count6_12 "6T-12TG" $count7_12 "7T-12TG" $count8_12 "8T-12TG" $count9_12 "9T-12TG" $count10_12 "10T-12TG" $count11_12 "11T-12TG" $count12_12 "12T-12TG" $count13_12 "13T-12TG" $count1_13 "1T-13TG" $count2_13 "2T-13TG" $count3_13 "3T-13TG" $count4_13 "4T-13TG" $count5_13 "5T-13TG" $count6_13 "6T-13TG" $count7_13 "7T-13TG" $count8_13 "8T-13TG" $count9_13 "9T-13TG" $count10_13 "10T-13TG" $count11_13 "11T-13TG" $count12_13 "12T-13TG" $count13_13 "13T-13TG" $count1_14 "1T-14TG" $count2_14 "2T-14TG" $count3_14 "3T-14TG" $count4_14 "4T-14TG" $count5_14 "5T-14TG" $count6_14 "6T-14TG" $count7_14 "7T-14TG" $count8_14 "8T-14TG" $count9_14 "9T-14TG" $count10_14 "10T-14TG" $count11_14 "11T-14TG" $count12_14 "12T-14TG" $count13_14 "13T-14TG" > $temp_file2
			
			max_array=( $( sort -nrk1,1 $temp_file2 | head -3 | cut -d '	' -f1 --output-delimiter=" " ) )
			top_haplo_1_count=${max_array[0]}
			top_haplo_2_count=${max_array[1]}
			top_haplo_3_count=${max_array[2]}
			
			max_array=( $( sort -nrk1,1 $temp_file2 | head -2 | cut -d '	' -f2 --output-delimiter=" " ) )
			top_haplo_1_name=${max_array[0]}
			top_haplo_2_name=${max_array[1]}
			
			
			printf -v percent_our_haplo_vs_total_at_locus "%0.0f" $(bc -l <<< "($sum_our_haplo/$total_reads) * 100")
			printf -v percent_not_our_haplo "%0.0f" $(bc -l <<< "(($total_reads-$sum_our_haplo)/$total_reads) * 100")
			
			#internal representations of top 2 haplo percentages
			#using these to calc the ratio. since output was changed to no decimals, created these internal variables to keep ratio the same
			#printf -v internal_top_haplo_1_percent "%0.2f" $(bc -l <<< "($top_haplo_1_count/$sum_our_haplo) * 100")
			#printf -v internal_top_haplo_2_percent "%0.2f" $(bc -l <<< "($top_haplo_2_count/$sum_our_haplo) * 100")
			
			printf -v top_haplo_1_percent "%0.0f" $(bc -l <<< "($top_haplo_1_count/$sum_our_haplo) * 100")
			printf -v top_haplo_2_percent "%0.0f" $(bc -l <<< "($top_haplo_2_count/$sum_our_haplo) * 100")
			printf -v top_haplo_3_percent "%0.0f" $(bc -l <<< "($top_haplo_3_count/$sum_our_haplo) * 100")
			
			#ratio_top_2=$(bc <<< "scale=4; ($top_haplo_2_percent/$top_haplo_1_percent)")
			#printf -v ratio_top_2 "%0.3f" $(bc -l <<< "($internal_top_haplo_2_percent/$internal_top_haplo_1_percent)")
			printf -v proportion_hap2 "%0.4f" $(bc -l <<< "($top_haplo_2_count/$sum_our_haplo)")
			zygosity_flag="Borderline"
			HOMO_THRESHOLD=0.1389
			HET_THRESHOLD=0.3171
			percent_haplo_used_for_call=0
			next_highest_percent_haplo=0
			
			#call homo
			if (( $(echo "$proportion_hap2 < $HOMO_THRESHOLD" |bc -l) )); then
				zygosity_flag="Homo"
				percent_haplo_used_for_call=$top_haplo_1_percent
				next_highest_percent_haplo=$top_haplo_2_percent
			#call het
			elif (( $(echo "$proportion_hap2 > $HET_THRESHOLD" |bc -l) )); then
				zygosity_flag="Het"
				printf -v percent_haplo_used_for_call "%0.0f" $(bc -l <<< "($top_haplo_1_percent+$top_haplo_2_percent)")
				next_highest_percent_haplo=$top_haplo_3_percent
			#borderline
			else
				printf -v percent_haplo_used_for_call "%0.0f" $(bc -l <<< "($top_haplo_1_percent+$top_haplo_2_percent)")
				next_highest_percent_haplo=$top_haplo_3_percent
			fi
		fi
	fi
	
	
	#zygosity options
		#NA
		#Borderline
		#Het
		#Homo
	if [ "$zygosity_flag" = "NA" ] || [ "$zygosity_flag" = "Borderline" ]; then
		final_call=${zygosity_flag}
	elif [ "$zygosity_flag" = "Het" ]; then
		final_call=${top_haplo_1_name}/${top_haplo_2_name}
	elif [ "$zygosity_flag" = "Homo" ]; then
		final_call=${top_haplo_1_name}/${top_haplo_1_name}
	fi
    
	##eliminated % next highest haplo cutoff because new proportion borderline range caught all issues.
	#NEXT_CUTOFF=15
	#if [ "$next_highest_percent_haplo" -ge "$NEXT_CUTOFF" ]; then
	#	final_call="percent_next_haplo_gte_15"
	#fi
	
    
    
    #now append data to the output files we already started with headers
	#polyTGT_counts.txt
#	printf "%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s\n" $out_base $final_call $total_reads $count1_4 $count2_4 $count3_4 $count4_4 $count5_4 $count6_4 $count7_4 $count8_4 $count9_4 $count10_4 $count11_4 $count12_4 $count13_4 $count1_5 $count2_5 $count3_5 $count4_5 $count5_5 $count6_5 $count7_5 $count8_5 $count9_5 $count10_5 $count11_5 $count12_5 $count13_5 $count1_6 $count2_6 $count3_6 $count4_6 $count5_6 $count6_6 $count7_6 $count8_6 $count9_6 $count10_6 $count11_6 $count12_6 $count13_6 $count1_7 $count2_7 $count3_7 $count4_7 $count5_7 $count6_7 $count7_7 $count8_7 $count9_7 $count10_7 $count11_7 $count12_7 $count13_7 $count1_8 $count2_8 $count3_8 $count4_8 $count5_8 $count6_8 $count7_8 $count8_8 $count9_8 $count10_8 $count11_8 $count12_8 $count13_8 $count1_9 $count2_9 $count3_9 $count4_9 $count5_9 $count6_9 $count7_9 $count8_9 $count9_9 $count10_9 $count11_9 $count12_9 $count13_9 $count1_10 $count2_10 $count3_10 $count4_10 $count5_10 $count6_10 $count7_10 $count8_10 $count9_10 $count10_10 $count11_10 $count12_10 $count13_10 $count1_11 $count2_11 $count3_11 $count4_11 $count5_11 $count6_11 $count7_11 $count8_11 $count9_11 $count10_11 $count11_11 $count12_11 $count13_11 $count1_12 $count2_12 $count3_12 $count4_12 $count5_12 $count6_12 $count7_12 $count8_12 $count9_12 $count10_12 $count11_12 $count12_12 $count13_12 $count1_13 $count2_13 $count3_13 $count4_13 $count5_13 $count6_13 $count7_13 $count8_13 $count9_13 $count10_13 $count11_13 $count12_13 $count13_13 $count1_14 $count2_14 $count3_14 $count4_14 $count5_14 $count6_14 $count7_14 $count8_14 $count9_14 $count10_14 $count11_14 $count12_14 $count13_14 >> $hook_output_dir/${job_id}_polyTGT_counts_${VERSION}.txt
	
	#polyTGT_percents.txt
#	printf "%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s\n" $out_base $final_call $total_reads $sum_our_haplo $percent_our_haplo_vs_total_at_locus $percent_not_our_haplo $perc1_4 $perc2_4 $perc3_4 $perc4_4 $perc5_4 $perc6_4 $perc7_4 $perc8_4 $perc9_4 $perc10_4 $perc11_4 $perc12_4 $perc13_4 $perc1_5 $perc2_5 $perc3_5 $perc4_5 $perc5_5 $perc6_5 $perc7_5 $perc8_5 $perc9_5 $perc10_5 $perc11_5 $perc12_5 $perc13_5 $perc1_6 $perc2_6 $perc3_6 $perc4_6 $perc5_6 $perc6_6 $perc7_6 $perc8_6 $perc9_6 $perc10_6 $perc11_6 $perc12_6 $perc13_6 $perc1_7 $perc2_7 $perc3_7 $perc4_7 $perc5_7 $perc6_7 $perc7_7 $perc8_7 $perc9_7 $perc10_7 $perc11_7 $perc12_7 $perc13_7 $perc1_8 $perc2_8 $perc3_8 $perc4_8 $perc5_8 $perc6_8 $perc7_8 $perc8_8 $perc9_8 $perc10_8 $perc11_8 $perc12_8 $perc13_8 $perc1_9 $perc2_9 $perc3_9 $perc4_9 $perc5_9 $perc6_9 $perc7_9 $perc8_9 $perc9_9 $perc10_9 $perc11_9 $perc12_9 $perc13_9 $perc1_10 $perc2_10 $perc3_10 $perc4_10 $perc5_10 $perc6_10 $perc7_10 $perc8_10 $perc9_10 $perc10_10 $perc11_10 $perc12_10 $perc13_10 $perc1_11 $perc2_11 $perc3_11 $perc4_11 $perc5_11 $perc6_11 $perc7_11 $perc8_11 $perc9_11 $perc10_11 $perc11_11 $perc12_11 $perc13_11 $perc1_12 $perc2_12 $perc3_12 $perc4_12 $perc5_12 $perc6_12 $perc7_12 $perc8_12 $perc9_12 $perc10_12 $perc11_12 $perc12_12 $perc13_12 $perc1_13 $perc2_13 $perc3_13 $perc4_13 $perc5_13 $perc6_13 $perc7_13 $perc8_13 $perc9_13 $perc10_13 $perc11_13 $perc12_13 $perc13_13 $perc1_14 $perc2_14 $perc3_14 $perc4_14 $perc5_14 $perc6_14 $perc7_14 $perc8_14 $perc9_14 $perc10_14 $perc11_14 $perc12_14 $perc13_14 >> $hook_output_dir/${job_id}_polyTGT_percents_${VERSION}.txt
	
	#polyTGT_calls.txt
	printf "%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s\n" $out_base $final_call $total_reads $sum_our_haplo $percent_our_haplo_vs_total_at_locus $percent_not_our_haplo $top_haplo_1_name $top_haplo_1_count $top_haplo_1_percent $top_haplo_2_name $top_haplo_2_count $top_haplo_2_percent $proportion_hap2 $zygosity_flag $percent_haplo_used_for_call $next_highest_percent_haplo >> $hook_output_dir/${job_id}_polyTGT_calls_${VERSION}.txt
done