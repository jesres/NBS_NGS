#!/usr/bin/env bash
# Be sure to include above #! as the script will be called directly
#
# Author: kkhalsa (kkhalsa@archerdx.com)
# Bash hook example
# Example UI Args: -j ${JOB_ID} -d ${JOB_DIR} -o ${HOOK_OUTPUT_DIR} ${SAMPLE_NAMES_SPACED}

####polyTG_table_v1.0.1
####Author: Bob Sicko robert.sicko@health.ny.gov
####
####
####This script genotypes CFTR TG(m)T(n) alleles from fastq files. Our specific use case is ArcherDX VariantPlex CFTR fastqs.
####Disclaimer: We have validated the results generated by this script for our use case, your results may vary. User assumes all risk with the use of this script.
####The idea for this script came from: Pagin A, Devos A, Figeac M, Truant M, Willoquaux C, Broly F, et al. (2016) Applicability and Efficiency of NGS in Routine Diagnosis: In-Depth Performance Analysis of a Complete Workflow for CFTR Mutation Analysis. PLoS ONE 11(2): e0149426. doi:10.1371/journal.pone.0149426 
####
####Change Log:
####		v1.1 - Added a borderline range instead of a hard cutoff for het/homo.
####			 - Added 'percent_not_our_geno' to outputs (polyTGT_percents.txt & polyTGT_calls.txt) the percentage of reads at locus that are not classified by the genotypes in this script
####		v2.0 - Incorporated into Archer Analysis
####		v1.0.0-alpha.1 - renamed to follow semantic versioning. This will allow us to start with v1.0.0 on July 1st.
####						- labeled this one alpha since I know it will be replaced by the version that contains 1T - 11T
####		v1.0.0 - modified borderline range to 0.275 – 0.475 per Colleen 8/12/19.
####				- added a check for NTC samples. we won't output calls on these
####				- improved checks of total reads and total reads used in our haplotype calls
####				- this version still contains the original haplotypes TG(4-14)T(2-10)
####		v1.0.1-alpha.1 - added a 'final_call' column to the output table.
####						- comment out the 'counts' and 'percents' file output. we can turn these on if needed for debugging, but we don't use them.
####						- expand the haplotypes the script searches for to  TG(4-14)T(1-13)
####						- corrected column labels from 'geno' to 'haplo'
####		v1.0.1-alpha.2 - fixed fail on empty fastq:
####							zcat $R1 $R2 | LC_ALL=C fgrep $fiveP20 > $temp_file & zcat $R1 $R2 | LC_ALL=C fgrep $threeP20 >> $temp_file
####							was causing script to exit since set -eu
####							added || true to these lines to cause the script to continue
####						- added G to the 5' search strings. corrects minor read double counting that was causing sum_our_haplo to be a few reads > than total_reads_at_locus
####						- fixed count and percent files that can be output for debugging
####		v1.0.1-alpha.3 - added 'percent_haplo_used_for_call' and 'next_highest_percent_haplo' to the calls file. useful for debugging and potentially for a QC cutoff
####						- added final call the the percent and count files
####						- turned the call and count files back on for now
####To Do:
####	- Transition script to awk or python to process file from memory. This will make things much faster
####	- Incorporate basequality in counts. Cutoff or average score for each haplotype bin


set -eu

usage()
{
   echo "Usage: $0 -o hook_output_dir -j job_dir" 1>&2
   exit 1
}

while getopts ":o:j:" opt; do
    case "${opt}" in
        o)
            hook_output_dir=${OPTARG}
            ;;
		j)
			job_dir=${OPTARG}
			;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

set +u

if [ -z "${hook_output_dir}" ]; then
   echo "Error: -o hook_output_dir argument is required." >> /dev/stderr
   exit 1
fi
if [ -z "${job_dir}" ]; then
   echo "Error: -o job_dir argument is required." >> /dev/stderr
   exit 1
fi

set -u


#print headers
#polyTGT_counts.txt
printf "sample	final_call	total_reads_at_locus	(TG)4(T)1_count	(TG)4(T)2_count	(TG)4(T)3_count	(TG)4(T)4_count	(TG)4(T)5_count	(TG)4(T)6_count	(TG)4(T)7_count	(TG)4(T)8_count	(TG)4(T)9_count	(TG)4(T)10_count	(TG)4(T)11_count	(TG)4(T)12_count	(TG)4(T)13_count	(TG)5(T)1_count	(TG)5(T)2_count	(TG)5(T)3_count	(TG)5(T)4_count	(TG)5(T)5_count	(TG)5(T)6_count	(TG)5(T)7_count	(TG)5(T)8_count	(TG)5(T)9_count	(TG)5(T)10_count	(TG)5(T)11_count	(TG)5(T)12_count	(TG)5(T)13_count	(TG)6(T)1_count	(TG)6(T)2_count	(TG)6(T)3_count	(TG)6(T)4_count	(TG)6(T)5_count	(TG)6(T)6_count	(TG)6(T)7_count	(TG)6(T)8_count	(TG)6(T)9_count	(TG)6(T)10_count	(TG)6(T)11_count	(TG)6(T)12_count	(TG)6(T)13_count	(TG)7(T)1_count	(TG)7(T)2_count	(TG)7(T)3_count	(TG)7(T)4_count	(TG)7(T)5_count	(TG)7(T)6_count	(TG)7(T)7_count	(TG)7(T)8_count	(TG)7(T)9_count	(TG)7(T)10_count	(TG)7(T)11_count	(TG)7(T)12_count	(TG)7(T)13_count	(TG)8(T)1_count	(TG)8(T)2_count	(TG)8(T)3_count	(TG)8(T)4_count	(TG)8(T)5_count	(TG)8(T)6_count	(TG)8(T)7_count	(TG)8(T)8_count	(TG)8(T)9_count	(TG)8(T)10_count	(TG)8(T)11_count	(TG)8(T)12_count	(TG)8(T)13_count	(TG)9(T)1_count	(TG)9(T)2_count	(TG)9(T)3_count	(TG)9(T)4_count	(TG)9(T)5_count	(TG)9(T)6_count	(TG)9(T)7_count	(TG)9(T)8_count	(TG)9(T)9_count	(TG)9(T)10_count	(TG)9(T)11_count	(TG)9(T)12_count	(TG)9(T)13_count	(TG)10(T)1_count	(TG)10(T)2_count	(TG)10(T)3_count	(TG)10(T)4_count	(TG)10(T)5_count	(TG)10(T)6_count	(TG)10(T)7_count	(TG)10(T)8_count	(TG)10(T)9_count	(TG)10(T)10_count	(TG)10(T)11_count	(TG)10(T)12_count	(TG)10(T)13_count	(TG)11(T)1_count	(TG)11(T)2_count	(TG)11(T)3_count	(TG)11(T)4_count	(TG)11(T)5_count	(TG)11(T)6_count	(TG)11(T)7_count	(TG)11(T)8_count	(TG)11(T)9_count	(TG)11(T)10_count	(TG)11(T)11_count	(TG)11(T)12_count	(TG)11(T)13_count	(TG)12(T)1_count	(TG)12(T)2_count	(TG)12(T)3_count	(TG)12(T)4_count	(TG)12(T)5_count	(TG)12(T)6_count	(TG)12(T)7_count	(TG)12(T)8_count	(TG)12(T)9_count	(TG)12(T)10_count	(TG)12(T)11_count	(TG)12(T)12_count	(TG)12(T)13_count	(TG)13(T)1_count	(TG)13(T)2_count	(TG)13(T)3_count	(TG)13(T)4_count	(TG)13(T)5_count	(TG)13(T)6_count	(TG)13(T)7_count	(TG)13(T)8_count	(TG)13(T)9_count	(TG)13(T)10_count	(TG)13(T)11_count	(TG)13(T)12_count	(TG)13(T)13_count	(TG)14(T)1_count	(TG)14(T)2_count	(TG)14(T)3_count	(TG)14(T)4_count	(TG)14(T)5_count	(TG)14(T)6_count	(TG)14(T)7_count	(TG)14(T)8_count	(TG)14(T)9_count	(TG)14(T)10_count	(TG)14(T)11_count	(TG)14(T)12_count	(TG)14(T)13_count\n" > $hook_output_dir/polyTGT_counts.txt

#polyTGT_percents.txt
printf "sample	final_call	total_reads_at_locus	sum_our_haplo	percent_our_haplo_vs_total_at_locus	percent_not_our_haplo	(TG)4(T)1_percent	(TG)4(T)2_percent	(TG)4(T)3_percent	(TG)4(T)4_percent	(TG)4(T)5_percent	(TG)4(T)6_percent	(TG)4(T)7_percent	(TG)4(T)8_percent	(TG)4(T)9_percent	(TG)4(T)10_percent	(TG)4(T)11_percent	(TG)4(T)12_percent	(TG)4(T)13_percent	(TG)5(T)1_percent	(TG)5(T)2_percent	(TG)5(T)3_percent	(TG)5(T)4_percent	(TG)5(T)5_percent	(TG)5(T)6_percent	(TG)5(T)7_percent	(TG)5(T)8_percent	(TG)5(T)9_percent	(TG)5(T)10_percent	(TG)5(T)11_percent	(TG)5(T)12_percent	(TG)5(T)13_percent	(TG)6(T)1_percent	(TG)6(T)2_percent	(TG)6(T)3_percent	(TG)6(T)4_percent	(TG)6(T)5_percent	(TG)6(T)6_percent	(TG)6(T)7_percent	(TG)6(T)8_percent	(TG)6(T)9_percent	(TG)6(T)10_percent	(TG)6(T)11_percent	(TG)6(T)12_percent	(TG)6(T)13_percent	(TG)7(T)1_percent	(TG)7(T)2_percent	(TG)7(T)3_percent	(TG)7(T)4_percent	(TG)7(T)5_percent	(TG)7(T)6_percent	(TG)7(T)7_percent	(TG)7(T)8_percent	(TG)7(T)9_percent	(TG)7(T)10_percent	(TG)7(T)11_percent	(TG)7(T)12_percent	(TG)7(T)13_percent	(TG)8(T)1_percent	(TG)8(T)2_percent	(TG)8(T)3_percent	(TG)8(T)4_percent	(TG)8(T)5_percent	(TG)8(T)6_percent	(TG)8(T)7_percent	(TG)8(T)8_percent	(TG)8(T)9_percent	(TG)8(T)10_percent	(TG)8(T)11_percent	(TG)8(T)12_percent	(TG)8(T)13_percent	(TG)9(T)1_percent	(TG)9(T)2_percent	(TG)9(T)3_percent	(TG)9(T)4_percent	(TG)9(T)5_percent	(TG)9(T)6_percent	(TG)9(T)7_percent	(TG)9(T)8_percent	(TG)9(T)9_percent	(TG)9(T)10_percent	(TG)9(T)11_percent	(TG)9(T)12_percent	(TG)9(T)13_percent	(TG)10(T)1_percent	(TG)10(T)2_percent	(TG)10(T)3_percent	(TG)10(T)4_percent	(TG)10(T)5_percent	(TG)10(T)6_percent	(TG)10(T)7_percent	(TG)10(T)8_percent	(TG)10(T)9_percent	(TG)10(T)10_percent	(TG)10(T)11_percent	(TG)10(T)12_percent	(TG)10(T)13_percent	(TG)11(T)1_percent	(TG)11(T)2_percent	(TG)11(T)3_percent	(TG)11(T)4_percent	(TG)11(T)5_percent	(TG)11(T)6_percent	(TG)11(T)7_percent	(TG)11(T)8_percent	(TG)11(T)9_percent	(TG)11(T)10_percent	(TG)11(T)11_percent	(TG)11(T)12_percent	(TG)11(T)13_percent	(TG)12(T)1_percent	(TG)12(T)2_percent	(TG)12(T)3_percent	(TG)12(T)4_percent	(TG)12(T)5_percent	(TG)12(T)6_percent	(TG)12(T)7_percent	(TG)12(T)8_percent	(TG)12(T)9_percent	(TG)12(T)10_percent	(TG)12(T)11_percent	(TG)12(T)12_percent	(TG)12(T)13_percent	(TG)13(T)1_percent	(TG)13(T)2_percent	(TG)13(T)3_percent	(TG)13(T)4_percent	(TG)13(T)5_percent	(TG)13(T)6_percent	(TG)13(T)7_percent	(TG)13(T)8_percent	(TG)13(T)9_percent	(TG)13(T)10_percent	(TG)13(T)11_percent	(TG)13(T)12_percent	(TG)13(T)13_percent	(TG)14(T)1_percent	(TG)14(T)2_percent	(TG)14(T)3_percent	(TG)14(T)4_percent	(TG)14(T)5_percent	(TG)14(T)6_percent	(TG)14(T)7_percent	(TG)14(T)8_percent	(TG)14(T)9_percent	(TG)14(T)10_percent	(TG)14(T)11_percent	(TG)14(T)12_percent	(TG)14(T)13_percent\n" > $hook_output_dir/polyTGT_percents.txt

#polyTGT_calls.txt
printf "sample	final_call	total_reads_at_locus	sum_our_haplo	percent_our_haplo_vs_total_at_locus	percent_not_our_haplo	top_haplo_1_name	top_haplo_1_count	top_haplo_1_percent	top_haplo_2_name	top_haplo_2_count	top_haplo_2_percent	ratio_top_2	zygosity	percent_haplo_used_for_call	next_highest_percent_haplo\n" > $hook_output_dir/polyTGT_calls.txt

for R1 in ${job_dir}/*_L001_R1_001.fastq.gz
do
	R2=${R1//R1_001.fastq.gz/R2_001.fastq.gz}
	prefix=$(echo ${R1} | sed "s/_L001_R1_\001\.fastq.gz//") 
	#echo ${prefix}_L001_R1_001.fastq ${prefix}_L001_R2_001.fastq
	#echo $prefix
	#R1=${prefix}_L001_R1_001.fastq.gz
	#R2=${prefix}_L001_R2_001.fastq.gz
	#echo $R1
	#echo $R2
	out_base=${prefix##*/}
	
	#add a check to output nothing for NTC
	#the polyTGT reads are artifacts of primers in the region for the NTCs
	#our QC of NTC is coverage after alignment
	if echo $out_base | grep -iqF ntc; then
		total_reads=0
		sum_our_haplo=0
		top_haplo_1_name="NTC_not_called"
		top_haplo_2_name="NTC_not_called"
		top_haplo_1_count=0
		top_haplo_2_count=0
		percent_our_haplo_vs_total_at_locus=0
		percent_not_our_haplo=0
		top_haplo_1_percent=0
		top_haplo_2_percent=0
		ratio_top_2=0
		#percents
		perc4_1=0
		perc4_2=0
		perc4_3=0
		perc4_4=0
		perc4_5=0
		perc4_6=0
		perc4_7=0
		perc4_8=0
		perc4_9=0
		perc4_10=0
		perc4_11=0
		perc4_12=0
		perc4_13=0
		
		perc5_1=0
		perc5_2=0
		perc5_3=0
		perc5_4=0
		perc5_5=0
		perc5_6=0
		perc5_7=0
		perc5_8=0
		perc5_9=0
		perc5_10=0
		perc5_11=0
		perc5_12=0
		perc5_13=0
		
		perc6_1=0
		perc6_2=0
		perc6_3=0
		perc6_4=0
		perc6_5=0
		perc6_6=0
		perc6_7=0
		perc6_8=0
		perc6_9=0
		perc6_10=0
		perc6_11=0
		perc6_12=0
		perc6_13=0
		
		perc7_1=0
		perc7_2=0
		perc7_3=0
		perc7_4=0
		perc7_5=0
		perc7_6=0
		perc7_7=0
		perc7_8=0
		perc7_9=0
		perc7_10=0
		perc7_11=0
		perc7_12=0
		perc7_13=0
		
		perc8_1=0
		perc8_2=0
		perc8_3=0
		perc8_4=0
		perc8_5=0
		perc8_6=0
		perc8_7=0
		perc8_8=0
		perc8_9=0
		perc8_10=0
		perc8_11=0
		perc8_12=0
		perc8_13=0
		
		perc9_1=0
		perc9_2=0
		perc9_3=0
		perc9_4=0
		perc9_5=0
		perc9_6=0
		perc9_7=0
		perc9_8=0
		perc9_9=0
		perc9_10=0
		perc9_11=0
		perc9_12=0
		perc9_13=0
		
		perc10_1=0
		perc10_2=0
		perc10_3=0
		perc10_4=0
		perc10_5=0
		perc10_6=0
		perc10_7=0
		perc10_8=0
		perc10_9=0
		perc10_10=0
		perc10_11=0
		perc10_12=0
		perc10_13=0
		
		perc11_1=0
		perc11_2=0
		perc11_3=0
		perc11_4=0
		perc11_5=0
		perc11_6=0
		perc11_7=0
		perc11_8=0
		perc11_9=0
		perc11_10=0
		perc11_11=0
		perc11_12=0
		perc11_13=0
		
		perc12_1=0
		perc12_2=0
		perc12_3=0
		perc12_4=0
		perc12_5=0
		perc12_6=0
		perc12_7=0
		perc12_8=0
		perc12_9=0
		perc12_10=0
		perc12_11=0
		perc12_12=0
		perc12_13=0
		
		perc13_1=0
		perc13_2=0
		perc13_3=0
		perc13_4=0
		perc13_5=0
		perc13_6=0
		perc13_7=0
		perc13_8=0
		perc13_9=0
		perc13_10=0
		perc13_11=0
		perc13_12=0
		perc13_13=0
		
		perc14_1=0
		perc14_2=0
		perc14_3=0
		perc14_4=0
		perc14_5=0
		perc14_6=0
		perc14_7=0
		perc14_8=0
		perc14_9=0
		perc14_10=0
		perc14_11=0
		perc14_12=0
		perc14_13=0
		
		zygosity_flag="NA"
	else
		#echo "R1:" $R1 '	' "R2:" $R2 '	' "prefix" $prefix '	' "out_base" $out_base
		fiveP30=ATATCTGACAAACTCATCTTTTATTTTTGA
		threeP30=AACAGGGATTTGGGGAATTATTTGAGAAAG
		
		fiveP20=AACTCATCTTTTATTTTTGA
		threeP20=AACAGGGATTTGGGGAATTA
		temp_file=$(mktemp)
		trap "rm -f $temp_file" 0 2 3 15
		#note: this will double count some reads. if a read contains the 5' and 3' 30bp leader, it'll match both of these greps. This might be fine, we'll see.
		
		#speed up grep: https://stackoverflow.com/questions/13913014/grepping-a-huge-file-80gb-any-way-to-speed-it-up
		zcat $R1 $R2 | LC_ALL=C fgrep $fiveP20 > $temp_file || true
		zcat $R1 $R2 | LC_ALL=C fgrep $threeP20 >> $temp_file || true
		
		#total reads that cover entire TG(x)T(y) region
		#use regexp grep to count reads that have at least 4 TGs, 1 T and at least GA 5' and A 3'
		
		total_reads=$(egrep 'GA(TG){4,}(T){1,}A' $temp_file | wc -l)
		
#for debugging if echo $out_base | grep -iqF test; then
#for debugging	cp $temp_file $hook_output_dir/test_all_reads.txt
#for debugging	egrep 'GA(TG){4,}(T){1,}A' $temp_file > $hook_output_dir/test_total_reads.txt
#for debugging fi
		#TG4 block
		TG4T1=GATGTGTGTGTA
		TG4T2=GATGTGTGTGTTA
		TG4T3=GATGTGTGTGTTTA
		TG4T4=GATGTGTGTGTTTTA
		TG4T5=GATGTGTGTGTTTTTA
		TG4T6=GATGTGTGTGTTTTTTA
		TG4T7=GATGTGTGTGTTTTTTTA
		TG4T8=GATGTGTGTGTTTTTTTTA
		TG4T9=GATGTGTGTGTTTTTTTTTA
		TG4T10=GATGTGTGTGTTTTTTTTTTA
		TG4T11=GATGTGTGTGTTTTTTTTTTTA
		TG4T12=GATGTGTGTGTTTTTTTTTTTTA
		TG4T13=GATGTGTGTGTTTTTTTTTTTTTA
		#TG5 block
		TG5T1=GATGTGTGTGTGTA
		TG5T2=GATGTGTGTGTGTTA
		TG5T3=GATGTGTGTGTGTTTA
		TG5T4=GATGTGTGTGTGTTTTA
		TG5T5=GATGTGTGTGTGTTTTTA
		TG5T6=GATGTGTGTGTGTTTTTTA
		TG5T7=GATGTGTGTGTGTTTTTTTA
		TG5T8=GATGTGTGTGTGTTTTTTTTA
		TG5T9=GATGTGTGTGTGTTTTTTTTTA
		TG5T10=GATGTGTGTGTGTTTTTTTTTTA
		TG5T11=GATGTGTGTGTGTTTTTTTTTTTA
		TG5T12=GATGTGTGTGTGTTTTTTTTTTTTA
		TG5T13=GATGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG6 block
		TG6T1=GATGTGTGTGTGTGTA
		TG6T2=GATGTGTGTGTGTGTTA
		TG6T3=GATGTGTGTGTGTGTTTA
		TG6T4=GATGTGTGTGTGTGTTTTA
		TG6T5=GATGTGTGTGTGTGTTTTTA
		TG6T6=GATGTGTGTGTGTGTTTTTTA
		TG6T7=GATGTGTGTGTGTGTTTTTTTA
		TG6T8=GATGTGTGTGTGTGTTTTTTTTA
		TG6T9=GATGTGTGTGTGTGTTTTTTTTTA
		TG6T10=GATGTGTGTGTGTGTTTTTTTTTTA
		TG6T11=GATGTGTGTGTGTGTTTTTTTTTTTA
		TG6T12=GATGTGTGTGTGTGTTTTTTTTTTTTA
		TG6T13=GATGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG7 block
		TG7T1=GATGTGTGTGTGTGTGTA
		TG7T2=GATGTGTGTGTGTGTGTTA
		TG7T3=GATGTGTGTGTGTGTGTTTA
		TG7T4=GATGTGTGTGTGTGTGTTTTA
		TG7T5=GATGTGTGTGTGTGTGTTTTTA
		TG7T6=GATGTGTGTGTGTGTGTTTTTTA
		TG7T7=GATGTGTGTGTGTGTGTTTTTTTA
		TG7T8=GATGTGTGTGTGTGTGTTTTTTTTA
		TG7T9=GATGTGTGTGTGTGTGTTTTTTTTTA
		TG7T10=GATGTGTGTGTGTGTGTTTTTTTTTTA
		TG7T11=GATGTGTGTGTGTGTGTTTTTTTTTTTA
		TG7T12=GATGTGTGTGTGTGTGTTTTTTTTTTTTA
		TG7T13=GATGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG8 block
		TG8T1=GATGTGTGTGTGTGTGTGTA
		TG8T2=GATGTGTGTGTGTGTGTGTTA
		TG8T3=GATGTGTGTGTGTGTGTGTTTA
		TG8T4=GATGTGTGTGTGTGTGTGTTTTA
		TG8T5=GATGTGTGTGTGTGTGTGTTTTTA
		TG8T6=GATGTGTGTGTGTGTGTGTTTTTTA
		TG8T7=GATGTGTGTGTGTGTGTGTTTTTTTA
		TG8T8=GATGTGTGTGTGTGTGTGTTTTTTTTA
		TG8T9=GATGTGTGTGTGTGTGTGTTTTTTTTTA
		TG8T10=GATGTGTGTGTGTGTGTGTTTTTTTTTTA
		TG8T11=GATGTGTGTGTGTGTGTGTTTTTTTTTTTA
		TG8T12=GATGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		TG8T13=GATGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG9 block
		TG9T1=GATGTGTGTGTGTGTGTGTGTA
		TG9T2=GATGTGTGTGTGTGTGTGTGTTA
		TG9T3=GATGTGTGTGTGTGTGTGTGTTTA
		TG9T4=GATGTGTGTGTGTGTGTGTGTTTTA
		TG9T5=GATGTGTGTGTGTGTGTGTGTTTTTA
		TG9T6=GATGTGTGTGTGTGTGTGTGTTTTTTA
		TG9T7=GATGTGTGTGTGTGTGTGTGTTTTTTTA
		TG9T8=GATGTGTGTGTGTGTGTGTGTTTTTTTTA
		TG9T9=GATGTGTGTGTGTGTGTGTGTTTTTTTTTA
		TG9T10=GATGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		TG9T11=GATGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		TG9T12=GATGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		TG9T13=GATGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG10 block
		TG10T1=GATGTGTGTGTGTGTGTGTGTGTA
		TG10T2=GATGTGTGTGTGTGTGTGTGTGTTA
		TG10T3=GATGTGTGTGTGTGTGTGTGTGTTTA
		TG10T4=GATGTGTGTGTGTGTGTGTGTGTTTTA
		TG10T5=GATGTGTGTGTGTGTGTGTGTGTTTTTA
		TG10T6=GATGTGTGTGTGTGTGTGTGTGTTTTTTA
		TG10T7=GATGTGTGTGTGTGTGTGTGTGTTTTTTTA
		TG10T8=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		TG10T9=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		TG10T10=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		TG10T11=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		TG10T12=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		TG10T13=GATGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG11 block
		TG11T1=GATGTGTGTGTGTGTGTGTGTGTGTA
		TG11T2=GATGTGTGTGTGTGTGTGTGTGTGTTA
		TG11T3=GATGTGTGTGTGTGTGTGTGTGTGTTTA
		TG11T4=GATGTGTGTGTGTGTGTGTGTGTGTTTTA
		TG11T5=GATGTGTGTGTGTGTGTGTGTGTGTTTTTA
		TG11T6=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTA
		TG11T7=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTA
		TG11T8=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		TG11T9=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		TG11T10=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		TG11T11=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		TG11T12=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		TG11T13=GATGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG12 block
		TG12T1=GATGTGTGTGTGTGTGTGTGTGTGTGTA
		TG12T2=GATGTGTGTGTGTGTGTGTGTGTGTGTTA
		TG12T3=GATGTGTGTGTGTGTGTGTGTGTGTGTTTA
		TG12T4=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTA
		TG12T5=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTA
		TG12T6=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTA
		TG12T7=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTA
		TG12T8=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		TG12T9=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		TG12T10=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		TG12T11=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		TG12T12=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		TG12T13=GATGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG13 block
		TG13T1=GATGTGTGTGTGTGTGTGTGTGTGTGTGTA
		TG13T2=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTA
		TG13T3=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTA
		TG13T4=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTA
		TG13T5=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTA
		TG13T6=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTA
		TG13T7=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTA
		TG13T8=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		TG13T9=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		TG13T10=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		TG13T11=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		TG13T12=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		TG13T13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#TG14 block
		TG14T1=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTA
		TG14T2=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTA
		TG14T3=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTA
		TG14T4=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTA
		TG14T5=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTA
		TG14T6=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTA
		TG14T7=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTA
		TG14T8=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTA
		TG14T9=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTA
		TG14T10=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTA
		TG14T11=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTA
		TG14T12=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTA
		TG14T13=GATGTGTGTGTGTGTGTGTGTGTGTGTGTGTTTTTTTTTTTTTA
		
		#counts
		count4_1=$(LC_ALL=C fgrep $TG4T1 $temp_file | wc -l)
		count4_2=$(LC_ALL=C fgrep $TG4T2 $temp_file | wc -l)
		count4_3=$(LC_ALL=C fgrep $TG4T3 $temp_file | wc -l)
		count4_4=$(LC_ALL=C fgrep $TG4T4 $temp_file | wc -l)
		count4_5=$(LC_ALL=C fgrep $TG4T5 $temp_file | wc -l)
		count4_6=$(LC_ALL=C fgrep $TG4T6 $temp_file | wc -l)
		count4_7=$(LC_ALL=C fgrep $TG4T7 $temp_file | wc -l)
		count4_8=$(LC_ALL=C fgrep $TG4T8 $temp_file | wc -l)
		count4_9=$(LC_ALL=C fgrep $TG4T9 $temp_file | wc -l)
		count4_10=$(LC_ALL=C fgrep $TG4T10 $temp_file | wc -l)
		count4_11=$(LC_ALL=C fgrep $TG4T11 $temp_file | wc -l)
		count4_12=$(LC_ALL=C fgrep $TG4T12 $temp_file | wc -l)
		count4_13=$(LC_ALL=C fgrep $TG4T13 $temp_file | wc -l)
		
		count5_1=$(LC_ALL=C fgrep $TG5T1 $temp_file | wc -l)
		count5_2=$(LC_ALL=C fgrep $TG5T2 $temp_file | wc -l)
		count5_3=$(LC_ALL=C fgrep $TG5T3 $temp_file | wc -l)
		count5_4=$(LC_ALL=C fgrep $TG5T4 $temp_file | wc -l)
		count5_5=$(LC_ALL=C fgrep $TG5T5 $temp_file | wc -l)
		count5_6=$(LC_ALL=C fgrep $TG5T6 $temp_file | wc -l)
		count5_7=$(LC_ALL=C fgrep $TG5T7 $temp_file | wc -l)
		count5_8=$(LC_ALL=C fgrep $TG5T8 $temp_file | wc -l)
		count5_9=$(LC_ALL=C fgrep $TG5T9 $temp_file | wc -l)
		count5_10=$(LC_ALL=C fgrep $TG5T10 $temp_file | wc -l)
		count5_11=$(LC_ALL=C fgrep $TG5T11 $temp_file | wc -l)
		count5_12=$(LC_ALL=C fgrep $TG5T12 $temp_file | wc -l)
		count5_13=$(LC_ALL=C fgrep $TG5T13 $temp_file | wc -l)
		
		count6_1=$(LC_ALL=C fgrep $TG6T1 $temp_file | wc -l)
		count6_2=$(LC_ALL=C fgrep $TG6T2 $temp_file | wc -l)
		count6_3=$(LC_ALL=C fgrep $TG6T3 $temp_file | wc -l)
		count6_4=$(LC_ALL=C fgrep $TG6T4 $temp_file | wc -l)
		count6_5=$(LC_ALL=C fgrep $TG6T5 $temp_file | wc -l)
		count6_6=$(LC_ALL=C fgrep $TG6T6 $temp_file | wc -l)
		count6_7=$(LC_ALL=C fgrep $TG6T7 $temp_file | wc -l)
		count6_8=$(LC_ALL=C fgrep $TG6T8 $temp_file | wc -l)
		count6_9=$(LC_ALL=C fgrep $TG6T9 $temp_file | wc -l)
		count6_10=$(LC_ALL=C fgrep $TG6T10 $temp_file | wc -l)
		count6_11=$(LC_ALL=C fgrep $TG6T11 $temp_file | wc -l)
		count6_12=$(LC_ALL=C fgrep $TG6T12 $temp_file | wc -l)
		count6_13=$(LC_ALL=C fgrep $TG6T13 $temp_file | wc -l)
		
		count7_1=$(LC_ALL=C fgrep $TG7T1 $temp_file | wc -l)
		count7_2=$(LC_ALL=C fgrep $TG7T2 $temp_file | wc -l)
		count7_3=$(LC_ALL=C fgrep $TG7T3 $temp_file | wc -l)
		count7_4=$(LC_ALL=C fgrep $TG7T4 $temp_file | wc -l)
		count7_5=$(LC_ALL=C fgrep $TG7T5 $temp_file | wc -l)
		count7_6=$(LC_ALL=C fgrep $TG7T6 $temp_file | wc -l)
		count7_7=$(LC_ALL=C fgrep $TG7T7 $temp_file | wc -l)
		count7_8=$(LC_ALL=C fgrep $TG7T8 $temp_file | wc -l)
		count7_9=$(LC_ALL=C fgrep $TG7T9 $temp_file | wc -l)
		count7_10=$(LC_ALL=C fgrep $TG7T10 $temp_file | wc -l)
		count7_11=$(LC_ALL=C fgrep $TG7T11 $temp_file | wc -l)
		count7_12=$(LC_ALL=C fgrep $TG7T12 $temp_file | wc -l)
		count7_13=$(LC_ALL=C fgrep $TG7T13 $temp_file | wc -l)
		
		count8_1=$(LC_ALL=C fgrep $TG8T1 $temp_file | wc -l)
		count8_2=$(LC_ALL=C fgrep $TG8T2 $temp_file | wc -l)
		count8_3=$(LC_ALL=C fgrep $TG8T3 $temp_file | wc -l)
		count8_4=$(LC_ALL=C fgrep $TG8T4 $temp_file | wc -l)
		count8_5=$(LC_ALL=C fgrep $TG8T5 $temp_file | wc -l)
		count8_6=$(LC_ALL=C fgrep $TG8T6 $temp_file | wc -l)
		count8_7=$(LC_ALL=C fgrep $TG8T7 $temp_file | wc -l)
		count8_8=$(LC_ALL=C fgrep $TG8T8 $temp_file | wc -l)
		count8_9=$(LC_ALL=C fgrep $TG8T9 $temp_file | wc -l)
		count8_10=$(LC_ALL=C fgrep $TG8T10 $temp_file | wc -l)
		count8_11=$(LC_ALL=C fgrep $TG8T11 $temp_file | wc -l)
		count8_12=$(LC_ALL=C fgrep $TG8T12 $temp_file | wc -l)
		count8_13=$(LC_ALL=C fgrep $TG8T13 $temp_file | wc -l)
		
		count9_1=$(LC_ALL=C fgrep $TG9T1 $temp_file | wc -l)
		count9_2=$(LC_ALL=C fgrep $TG9T2 $temp_file | wc -l)
		count9_3=$(LC_ALL=C fgrep $TG9T3 $temp_file | wc -l)
		count9_4=$(LC_ALL=C fgrep $TG9T4 $temp_file | wc -l)
		count9_5=$(LC_ALL=C fgrep $TG9T5 $temp_file | wc -l)
		count9_6=$(LC_ALL=C fgrep $TG9T6 $temp_file | wc -l)
		count9_7=$(LC_ALL=C fgrep $TG9T7 $temp_file | wc -l)
		count9_8=$(LC_ALL=C fgrep $TG9T8 $temp_file | wc -l)
		count9_9=$(LC_ALL=C fgrep $TG9T9 $temp_file | wc -l)
		count9_10=$(LC_ALL=C fgrep $TG9T10 $temp_file | wc -l)
		count9_11=$(LC_ALL=C fgrep $TG9T11 $temp_file | wc -l)
		count9_12=$(LC_ALL=C fgrep $TG9T12 $temp_file | wc -l)
		count9_13=$(LC_ALL=C fgrep $TG9T13 $temp_file | wc -l)
		
		count10_1=$(LC_ALL=C fgrep $TG10T1 $temp_file | wc -l)
		count10_2=$(LC_ALL=C fgrep $TG10T2 $temp_file | wc -l)
		count10_3=$(LC_ALL=C fgrep $TG10T3 $temp_file | wc -l)
		count10_4=$(LC_ALL=C fgrep $TG10T4 $temp_file | wc -l)
		count10_5=$(LC_ALL=C fgrep $TG10T5 $temp_file | wc -l)
		count10_6=$(LC_ALL=C fgrep $TG10T6 $temp_file | wc -l)
		count10_7=$(LC_ALL=C fgrep $TG10T7 $temp_file | wc -l)
		count10_8=$(LC_ALL=C fgrep $TG10T8 $temp_file | wc -l)
		count10_9=$(LC_ALL=C fgrep $TG10T9 $temp_file | wc -l)
		count10_10=$(LC_ALL=C fgrep $TG10T10 $temp_file | wc -l)
		count10_11=$(LC_ALL=C fgrep $TG10T11 $temp_file | wc -l)
		count10_12=$(LC_ALL=C fgrep $TG10T12 $temp_file | wc -l)
		count10_13=$(LC_ALL=C fgrep $TG10T13 $temp_file | wc -l)
		
		count11_1=$(LC_ALL=C fgrep $TG11T1 $temp_file | wc -l)
		count11_2=$(LC_ALL=C fgrep $TG11T2 $temp_file | wc -l)
		count11_3=$(LC_ALL=C fgrep $TG11T3 $temp_file | wc -l)
		count11_4=$(LC_ALL=C fgrep $TG11T4 $temp_file | wc -l)
		count11_5=$(LC_ALL=C fgrep $TG11T5 $temp_file | wc -l)
		count11_6=$(LC_ALL=C fgrep $TG11T6 $temp_file | wc -l)
		count11_7=$(LC_ALL=C fgrep $TG11T7 $temp_file | wc -l)
		count11_8=$(LC_ALL=C fgrep $TG11T8 $temp_file | wc -l)
		count11_9=$(LC_ALL=C fgrep $TG11T9 $temp_file | wc -l)
		count11_10=$(LC_ALL=C fgrep $TG11T10 $temp_file | wc -l)
		count11_11=$(LC_ALL=C fgrep $TG11T11 $temp_file | wc -l)
		count11_12=$(LC_ALL=C fgrep $TG11T12 $temp_file | wc -l)
		count11_13=$(LC_ALL=C fgrep $TG11T13 $temp_file | wc -l)
		
		count12_1=$(LC_ALL=C fgrep $TG12T1 $temp_file | wc -l)
		count12_2=$(LC_ALL=C fgrep $TG12T2 $temp_file | wc -l)
		count12_3=$(LC_ALL=C fgrep $TG12T3 $temp_file | wc -l)
		count12_4=$(LC_ALL=C fgrep $TG12T4 $temp_file | wc -l)
		count12_5=$(LC_ALL=C fgrep $TG12T5 $temp_file | wc -l)
		count12_6=$(LC_ALL=C fgrep $TG12T6 $temp_file | wc -l)
		count12_7=$(LC_ALL=C fgrep $TG12T7 $temp_file | wc -l)
		count12_8=$(LC_ALL=C fgrep $TG12T8 $temp_file | wc -l)
		count12_9=$(LC_ALL=C fgrep $TG12T9 $temp_file | wc -l)
		count12_10=$(LC_ALL=C fgrep $TG12T10 $temp_file | wc -l)
		count12_11=$(LC_ALL=C fgrep $TG12T11 $temp_file | wc -l)
		count12_12=$(LC_ALL=C fgrep $TG12T12 $temp_file | wc -l)
		count12_13=$(LC_ALL=C fgrep $TG12T13 $temp_file | wc -l)
		
		count13_1=$(LC_ALL=C fgrep $TG13T1 $temp_file | wc -l)
		count13_2=$(LC_ALL=C fgrep $TG13T2 $temp_file | wc -l)
		count13_3=$(LC_ALL=C fgrep $TG13T3 $temp_file | wc -l)
		count13_4=$(LC_ALL=C fgrep $TG13T4 $temp_file | wc -l)
		count13_5=$(LC_ALL=C fgrep $TG13T5 $temp_file | wc -l)
		count13_6=$(LC_ALL=C fgrep $TG13T6 $temp_file | wc -l)
		count13_7=$(LC_ALL=C fgrep $TG13T7 $temp_file | wc -l)
		count13_8=$(LC_ALL=C fgrep $TG13T8 $temp_file | wc -l)
		count13_9=$(LC_ALL=C fgrep $TG13T9 $temp_file | wc -l)
		count13_10=$(LC_ALL=C fgrep $TG13T10 $temp_file | wc -l)
		count13_11=$(LC_ALL=C fgrep $TG13T11 $temp_file | wc -l)
		count13_12=$(LC_ALL=C fgrep $TG13T12 $temp_file | wc -l)
		count13_13=$(LC_ALL=C fgrep $TG13T13 $temp_file | wc -l)
		
		count14_1=$(LC_ALL=C fgrep $TG14T1 $temp_file | wc -l)
		count14_2=$(LC_ALL=C fgrep $TG14T2 $temp_file | wc -l)
		count14_3=$(LC_ALL=C fgrep $TG14T3 $temp_file | wc -l)
		count14_4=$(LC_ALL=C fgrep $TG14T4 $temp_file | wc -l)
		count14_5=$(LC_ALL=C fgrep $TG14T5 $temp_file | wc -l)
		count14_6=$(LC_ALL=C fgrep $TG14T6 $temp_file | wc -l)
		count14_7=$(LC_ALL=C fgrep $TG14T7 $temp_file | wc -l)
		count14_8=$(LC_ALL=C fgrep $TG14T8 $temp_file | wc -l)
		count14_9=$(LC_ALL=C fgrep $TG14T9 $temp_file | wc -l)
		count14_10=$(LC_ALL=C fgrep $TG14T10 $temp_file | wc -l)
		count14_11=$(LC_ALL=C fgrep $TG14T11 $temp_file | wc -l)
		count14_12=$(LC_ALL=C fgrep $TG14T12 $temp_file | wc -l)
		count14_13=$(LC_ALL=C fgrep $TG14T13 $temp_file | wc -l)
		
		top_haplo_1_name=""
		top_haplo_2_name=""
		#total
		sum_our_haplo=$((count4_1+count4_2+count4_3+count4_4+count4_5+count4_6+count4_7+count4_8+count4_9+count4_10+count4_11+count4_12+count4_13+count5_1+count5_2+count5_3+count5_4+count5_5+count5_6+count5_7+count5_8+count5_9+count5_10+count5_11+count5_12+count5_13+count6_1+count6_2+count6_3+count6_4+count6_5+count6_6+count6_7+count6_8+count6_9+count6_10+count6_11+count6_12+count6_13+count7_1+count7_2+count7_3+count7_4+count7_5+count7_6+count7_7+count7_8+count7_9+count7_10+count7_11+count7_12+count7_13+count8_1+count8_2+count8_3+count8_4+count8_5+count8_6+count8_7+count8_8+count8_9+count8_10+count8_11+count8_12+count8_13+count9_1+count9_2+count9_3+count9_4+count9_5+count9_6+count9_7+count9_8+count9_9+count9_10+count9_11+count9_12+count9_13+count10_1+count10_2+count10_3+count10_4+count10_5+count10_6+count10_7+count10_8+count10_9+count10_10+count10_11+count10_12+count10_13+count11_1+count11_2+count11_3+count11_4+count11_5+count11_6+count11_7+count11_8+count11_9+count11_10+count11_11+count11_12+count11_13+count12_1+count12_2+count12_3+count12_4+count12_5+count12_6+count12_7+count12_8+count12_9+count12_10+count12_11+count12_12+count12_13+count13_1+count13_2+count13_3+count13_4+count13_5+count13_6+count13_7+count13_8+count13_9+count13_10+count13_11+count13_12+count13_13+count14_1+count14_2+count14_3+count14_4+count14_5+count14_6+count14_7+count14_8+count14_9+count14_10+count14_11+count14_12+count14_13))
		percent_our_haplo_vs_total_at_locus=0
		percent_not_our_haplo=0
		top_haplo_1_percent=0
		top_haplo_2_percent=0
		ratio_top_2=0
		
		#need to check if we have less than 100 reads at locus.
		if [ "$total_reads" -lt 100 ]; then
			top_haplo_1_name="Less_than_100_reads_FAIL"
			top_haplo_2_name="Less_than_100_reads_FAIL"
			top_haplo_1_count=0
			top_haplo_2_count=0
			#percents
			perc4_1=0
			perc4_2=0
			perc4_3=0
			perc4_4=0
			perc4_5=0
			perc4_6=0
			perc4_7=0
			perc4_8=0
			perc4_9=0
			perc4_10=0
			perc4_11=0
			perc4_12=0
			perc4_13=0
			
			perc5_1=0
			perc5_2=0
			perc5_3=0
			perc5_4=0
			perc5_5=0
			perc5_6=0
			perc5_7=0
			perc5_8=0
			perc5_9=0
			perc5_10=0
			perc5_11=0
			perc5_12=0
			perc5_13=0
			
			perc6_1=0
			perc6_2=0
			perc6_3=0
			perc6_4=0
			perc6_5=0
			perc6_6=0
			perc6_7=0
			perc6_8=0
			perc6_9=0
			perc6_10=0
			perc6_11=0
			perc6_12=0
			perc6_13=0
			
			perc7_1=0
			perc7_2=0
			perc7_3=0
			perc7_4=0
			perc7_5=0
			perc7_6=0
			perc7_7=0
			perc7_8=0
			perc7_9=0
			perc7_10=0
			perc7_11=0
			perc7_12=0
			perc7_13=0
			
			perc8_1=0
			perc8_2=0
			perc8_3=0
			perc8_4=0
			perc8_5=0
			perc8_6=0
			perc8_7=0
			perc8_8=0
			perc8_9=0
			perc8_10=0
			perc8_11=0
			perc8_12=0
			perc8_13=0
			
			perc9_1=0
			perc9_2=0
			perc9_3=0
			perc9_4=0
			perc9_5=0
			perc9_6=0
			perc9_7=0
			perc9_8=0
			perc9_9=0
			perc9_10=0
			perc9_11=0
			perc9_12=0
			perc9_13=0
			
			perc10_1=0
			perc10_2=0
			perc10_3=0
			perc10_4=0
			perc10_5=0
			perc10_6=0
			perc10_7=0
			perc10_8=0
			perc10_9=0
			perc10_10=0
			perc10_11=0
			perc10_12=0
			perc10_13=0
			
			perc11_1=0
			perc11_2=0
			perc11_3=0
			perc11_4=0
			perc11_5=0
			perc11_6=0
			perc11_7=0
			perc11_8=0
			perc11_9=0
			perc11_10=0
			perc11_11=0
			perc11_12=0
			perc11_13=0
			
			perc12_1=0
			perc12_2=0
			perc12_3=0
			perc12_4=0
			perc12_5=0
			perc12_6=0
			perc12_7=0
			perc12_8=0
			perc12_9=0
			perc12_10=0
			perc12_11=0
			perc12_12=0
			perc12_13=0
			
			perc13_1=0
			perc13_2=0
			perc13_3=0
			perc13_4=0
			perc13_5=0
			perc13_6=0
			perc13_7=0
			perc13_8=0
			perc13_9=0
			perc13_10=0
			perc13_11=0
			perc13_12=0
			perc13_13=0
			
			perc14_1=0
			perc14_2=0
			perc14_3=0
			perc14_4=0
			perc14_5=0
			perc14_6=0
			perc14_7=0
			perc14_8=0
			perc14_9=0
			perc14_10=0
			perc14_11=0
			perc14_12=0
			perc14_13=0
		
			zygosity_flag="NA"
		#check that sum_our_haplo doesn't = 0 before we divide by it.
		elif [ "$sum_our_haplo" -eq 0 ]; then
			top_haplo_1_name="no_reads_match_a_haplotype_we_search_for"
			top_haplo_2_name="no_reads_match_a_haplotype_we_search_for"
			top_haplo_1_count=0
			top_haplo_2_count=0
			#percents
			perc4_1=0
			perc4_2=0
			perc4_3=0
			perc4_4=0
			perc4_5=0
			perc4_6=0
			perc4_7=0
			perc4_8=0
			perc4_9=0
			perc4_10=0
			perc4_11=0
			perc4_12=0
			perc4_13=0
			
			perc5_1=0
			perc5_2=0
			perc5_3=0
			perc5_4=0
			perc5_5=0
			perc5_6=0
			perc5_7=0
			perc5_8=0
			perc5_9=0
			perc5_10=0
			perc5_11=0
			perc5_12=0
			perc5_13=0
			
			perc6_1=0
			perc6_2=0
			perc6_3=0
			perc6_4=0
			perc6_5=0
			perc6_6=0
			perc6_7=0
			perc6_8=0
			perc6_9=0
			perc6_10=0
			perc6_11=0
			perc6_12=0
			perc6_13=0
			
			perc7_1=0
			perc7_2=0
			perc7_3=0
			perc7_4=0
			perc7_5=0
			perc7_6=0
			perc7_7=0
			perc7_8=0
			perc7_9=0
			perc7_10=0
			perc7_11=0
			perc7_12=0
			perc7_13=0
			
			perc8_1=0
			perc8_2=0
			perc8_3=0
			perc8_4=0
			perc8_5=0
			perc8_6=0
			perc8_7=0
			perc8_8=0
			perc8_9=0
			perc8_10=0
			perc8_11=0
			perc8_12=0
			perc8_13=0
			
			perc9_1=0
			perc9_2=0
			perc9_3=0
			perc9_4=0
			perc9_5=0
			perc9_6=0
			perc9_7=0
			perc9_8=0
			perc9_9=0
			perc9_10=0
			perc9_11=0
			perc9_12=0
			perc9_13=0
			
			perc10_1=0
			perc10_2=0
			perc10_3=0
			perc10_4=0
			perc10_5=0
			perc10_6=0
			perc10_7=0
			perc10_8=0
			perc10_9=0
			perc10_10=0
			perc10_11=0
			perc10_12=0
			perc10_13=0
			
			perc11_1=0
			perc11_2=0
			perc11_3=0
			perc11_4=0
			perc11_5=0
			perc11_6=0
			perc11_7=0
			perc11_8=0
			perc11_9=0
			perc11_10=0
			perc11_11=0
			perc11_12=0
			perc11_13=0
			
			perc12_1=0
			perc12_2=0
			perc12_3=0
			perc12_4=0
			perc12_5=0
			perc12_6=0
			perc12_7=0
			perc12_8=0
			perc12_9=0
			perc12_10=0
			perc12_11=0
			perc12_12=0
			perc12_13=0
			
			perc13_1=0
			perc13_2=0
			perc13_3=0
			perc13_4=0
			perc13_5=0
			perc13_6=0
			perc13_7=0
			perc13_8=0
			perc13_9=0
			perc13_10=0
			perc13_11=0
			perc13_12=0
			perc13_13=0
			
			perc14_1=0
			perc14_2=0
			perc14_3=0
			perc14_4=0
			perc14_5=0
			perc14_6=0
			perc14_7=0
			perc14_8=0
			perc14_9=0
			perc14_10=0
			perc14_11=0
			perc14_12=0
			perc14_13=0
		
			zygosity_flag="NA"
		#otherwise we're good to divide
		else
			#percents
			printf -v perc4_1 "%0.0f" $(bc -l <<< "($count4_1/$sum_our_haplo) * 100")
			printf -v perc4_2 "%0.0f" $(bc -l <<< "($count4_2/$sum_our_haplo) * 100")
			printf -v perc4_3 "%0.0f" $(bc -l <<< "($count4_3/$sum_our_haplo) * 100")
			printf -v perc4_4 "%0.0f" $(bc -l <<< "($count4_4/$sum_our_haplo) * 100")
			printf -v perc4_5 "%0.0f" $(bc -l <<< "($count4_5/$sum_our_haplo) * 100")
			printf -v perc4_6 "%0.0f" $(bc -l <<< "($count4_6/$sum_our_haplo) * 100")
			printf -v perc4_7 "%0.0f" $(bc -l <<< "($count4_7/$sum_our_haplo) * 100")
			printf -v perc4_8 "%0.0f" $(bc -l <<< "($count4_8/$sum_our_haplo) * 100")
			printf -v perc4_9 "%0.0f" $(bc -l <<< "($count4_9/$sum_our_haplo) * 100")
			printf -v perc4_10 "%0.0f" $(bc -l <<< "($count4_10/$sum_our_haplo) * 100")
			printf -v perc4_11 "%0.0f" $(bc -l <<< "($count4_11/$sum_our_haplo) * 100")
			printf -v perc4_12 "%0.0f" $(bc -l <<< "($count4_12/$sum_our_haplo) * 100")
			printf -v perc4_13 "%0.0f" $(bc -l <<< "($count4_13/$sum_our_haplo) * 100")
			
			printf -v perc5_1 "%0.0f" $(bc -l <<< "($count5_1/$sum_our_haplo) * 100")
			printf -v perc5_2 "%0.0f" $(bc -l <<< "($count5_2/$sum_our_haplo) * 100")
			printf -v perc5_3 "%0.0f" $(bc -l <<< "($count5_3/$sum_our_haplo) * 100")
			printf -v perc5_4 "%0.0f" $(bc -l <<< "($count5_4/$sum_our_haplo) * 100")
			printf -v perc5_5 "%0.0f" $(bc -l <<< "($count5_5/$sum_our_haplo) * 100")
			printf -v perc5_6 "%0.0f" $(bc -l <<< "($count5_6/$sum_our_haplo) * 100")
			printf -v perc5_7 "%0.0f" $(bc -l <<< "($count5_7/$sum_our_haplo) * 100")
			printf -v perc5_8 "%0.0f" $(bc -l <<< "($count5_8/$sum_our_haplo) * 100")
			printf -v perc5_9 "%0.0f" $(bc -l <<< "($count5_9/$sum_our_haplo) * 100")
			printf -v perc5_10 "%0.0f" $(bc -l <<< "($count5_10/$sum_our_haplo) * 100")
			printf -v perc5_11 "%0.0f" $(bc -l <<< "($count5_11/$sum_our_haplo) * 100")
			printf -v perc5_12 "%0.0f" $(bc -l <<< "($count5_12/$sum_our_haplo) * 100")
			printf -v perc5_13 "%0.0f" $(bc -l <<< "($count5_13/$sum_our_haplo) * 100")
			
			printf -v perc6_1 "%0.0f" $(bc -l <<< "($count6_1/$sum_our_haplo) * 100")
			printf -v perc6_2 "%0.0f" $(bc -l <<< "($count6_2/$sum_our_haplo) * 100")
			printf -v perc6_3 "%0.0f" $(bc -l <<< "($count6_3/$sum_our_haplo) * 100")
			printf -v perc6_4 "%0.0f" $(bc -l <<< "($count6_4/$sum_our_haplo) * 100")
			printf -v perc6_5 "%0.0f" $(bc -l <<< "($count6_5/$sum_our_haplo) * 100")
			printf -v perc6_6 "%0.0f" $(bc -l <<< "($count6_6/$sum_our_haplo) * 100")
			printf -v perc6_7 "%0.0f" $(bc -l <<< "($count6_7/$sum_our_haplo) * 100")
			printf -v perc6_8 "%0.0f" $(bc -l <<< "($count6_8/$sum_our_haplo) * 100")
			printf -v perc6_9 "%0.0f" $(bc -l <<< "($count6_9/$sum_our_haplo) * 100")
			printf -v perc6_10 "%0.0f" $(bc -l <<< "($count6_10/$sum_our_haplo) * 100")
			printf -v perc6_11 "%0.0f" $(bc -l <<< "($count6_11/$sum_our_haplo) * 100")
			printf -v perc6_12 "%0.0f" $(bc -l <<< "($count6_12/$sum_our_haplo) * 100")
			printf -v perc6_13 "%0.0f" $(bc -l <<< "($count6_13/$sum_our_haplo) * 100")
			
			printf -v perc7_1 "%0.0f" $(bc -l <<< "($count7_1/$sum_our_haplo) * 100")
			printf -v perc7_2 "%0.0f" $(bc -l <<< "($count7_2/$sum_our_haplo) * 100")
			printf -v perc7_3 "%0.0f" $(bc -l <<< "($count7_3/$sum_our_haplo) * 100")
			printf -v perc7_4 "%0.0f" $(bc -l <<< "($count7_4/$sum_our_haplo) * 100")
			printf -v perc7_5 "%0.0f" $(bc -l <<< "($count7_5/$sum_our_haplo) * 100")
			printf -v perc7_6 "%0.0f" $(bc -l <<< "($count7_6/$sum_our_haplo) * 100")
			printf -v perc7_7 "%0.0f" $(bc -l <<< "($count7_7/$sum_our_haplo) * 100")
			printf -v perc7_8 "%0.0f" $(bc -l <<< "($count7_8/$sum_our_haplo) * 100")
			printf -v perc7_9 "%0.0f" $(bc -l <<< "($count7_9/$sum_our_haplo) * 100")
			printf -v perc7_10 "%0.0f" $(bc -l <<< "($count7_10/$sum_our_haplo) * 100")
			printf -v perc7_11 "%0.0f" $(bc -l <<< "($count7_11/$sum_our_haplo) * 100")
			printf -v perc7_12 "%0.0f" $(bc -l <<< "($count7_12/$sum_our_haplo) * 100")
			printf -v perc7_13 "%0.0f" $(bc -l <<< "($count7_13/$sum_our_haplo) * 100")
			
			printf -v perc8_1 "%0.0f" $(bc -l <<< "($count8_1/$sum_our_haplo) * 100")
			printf -v perc8_2 "%0.0f" $(bc -l <<< "($count8_2/$sum_our_haplo) * 100")
			printf -v perc8_3 "%0.0f" $(bc -l <<< "($count8_3/$sum_our_haplo) * 100")
			printf -v perc8_4 "%0.0f" $(bc -l <<< "($count8_4/$sum_our_haplo) * 100")
			printf -v perc8_5 "%0.0f" $(bc -l <<< "($count8_5/$sum_our_haplo) * 100")
			printf -v perc8_6 "%0.0f" $(bc -l <<< "($count8_6/$sum_our_haplo) * 100")
			printf -v perc8_7 "%0.0f" $(bc -l <<< "($count8_7/$sum_our_haplo) * 100")
			printf -v perc8_8 "%0.0f" $(bc -l <<< "($count8_8/$sum_our_haplo) * 100")
			printf -v perc8_9 "%0.0f" $(bc -l <<< "($count8_9/$sum_our_haplo) * 100")
			printf -v perc8_10 "%0.0f" $(bc -l <<< "($count8_10/$sum_our_haplo) * 100")
			printf -v perc8_11 "%0.0f" $(bc -l <<< "($count8_11/$sum_our_haplo) * 100")
			printf -v perc8_12 "%0.0f" $(bc -l <<< "($count8_12/$sum_our_haplo) * 100")
			printf -v perc8_13 "%0.0f" $(bc -l <<< "($count8_13/$sum_our_haplo) * 100")
			
			printf -v perc9_1 "%0.0f" $(bc -l <<< "($count9_1/$sum_our_haplo) * 100")
			printf -v perc9_2 "%0.0f" $(bc -l <<< "($count9_2/$sum_our_haplo) * 100")
			printf -v perc9_3 "%0.0f" $(bc -l <<< "($count9_3/$sum_our_haplo) * 100")
			printf -v perc9_4 "%0.0f" $(bc -l <<< "($count9_4/$sum_our_haplo) * 100")
			printf -v perc9_5 "%0.0f" $(bc -l <<< "($count9_5/$sum_our_haplo) * 100")
			printf -v perc9_6 "%0.0f" $(bc -l <<< "($count9_6/$sum_our_haplo) * 100")
			printf -v perc9_7 "%0.0f" $(bc -l <<< "($count9_7/$sum_our_haplo) * 100")
			printf -v perc9_8 "%0.0f" $(bc -l <<< "($count9_8/$sum_our_haplo) * 100")
			printf -v perc9_9 "%0.0f" $(bc -l <<< "($count9_9/$sum_our_haplo) * 100")
			printf -v perc9_10 "%0.0f" $(bc -l <<< "($count9_10/$sum_our_haplo) * 100")
			printf -v perc9_11 "%0.0f" $(bc -l <<< "($count9_11/$sum_our_haplo) * 100")
			printf -v perc9_12 "%0.0f" $(bc -l <<< "($count9_12/$sum_our_haplo) * 100")
			printf -v perc9_13 "%0.0f" $(bc -l <<< "($count9_13/$sum_our_haplo) * 100")
			
			printf -v perc10_1 "%0.0f" $(bc -l <<< "($count10_1/$sum_our_haplo) * 100")
			printf -v perc10_2 "%0.0f" $(bc -l <<< "($count10_2/$sum_our_haplo) * 100")
			printf -v perc10_3 "%0.0f" $(bc -l <<< "($count10_3/$sum_our_haplo) * 100")
			printf -v perc10_4 "%0.0f" $(bc -l <<< "($count10_4/$sum_our_haplo) * 100")
			printf -v perc10_5 "%0.0f" $(bc -l <<< "($count10_5/$sum_our_haplo) * 100")
			printf -v perc10_6 "%0.0f" $(bc -l <<< "($count10_6/$sum_our_haplo) * 100")
			printf -v perc10_7 "%0.0f" $(bc -l <<< "($count10_7/$sum_our_haplo) * 100")
			printf -v perc10_8 "%0.0f" $(bc -l <<< "($count10_8/$sum_our_haplo) * 100")
			printf -v perc10_9 "%0.0f" $(bc -l <<< "($count10_9/$sum_our_haplo) * 100")
			printf -v perc10_10 "%0.0f" $(bc -l <<< "($count10_10/$sum_our_haplo) * 100")
			printf -v perc10_11 "%0.0f" $(bc -l <<< "($count10_11/$sum_our_haplo) * 100")
			printf -v perc10_12 "%0.0f" $(bc -l <<< "($count10_12/$sum_our_haplo) * 100")
			printf -v perc10_13 "%0.0f" $(bc -l <<< "($count10_13/$sum_our_haplo) * 100")
			
			printf -v perc11_1 "%0.0f" $(bc -l <<< "($count11_1/$sum_our_haplo) * 100")
			printf -v perc11_2 "%0.0f" $(bc -l <<< "($count11_2/$sum_our_haplo) * 100")
			printf -v perc11_3 "%0.0f" $(bc -l <<< "($count11_3/$sum_our_haplo) * 100")
			printf -v perc11_4 "%0.0f" $(bc -l <<< "($count11_4/$sum_our_haplo) * 100")
			printf -v perc11_5 "%0.0f" $(bc -l <<< "($count11_5/$sum_our_haplo) * 100")
			printf -v perc11_6 "%0.0f" $(bc -l <<< "($count11_6/$sum_our_haplo) * 100")
			printf -v perc11_7 "%0.0f" $(bc -l <<< "($count11_7/$sum_our_haplo) * 100")
			printf -v perc11_8 "%0.0f" $(bc -l <<< "($count11_8/$sum_our_haplo) * 100")
			printf -v perc11_9 "%0.0f" $(bc -l <<< "($count11_9/$sum_our_haplo) * 100")
			printf -v perc11_10 "%0.0f" $(bc -l <<< "($count11_10/$sum_our_haplo) * 100")
			printf -v perc11_11 "%0.0f" $(bc -l <<< "($count11_11/$sum_our_haplo) * 100")
			printf -v perc11_12 "%0.0f" $(bc -l <<< "($count11_12/$sum_our_haplo) * 100")
			printf -v perc11_13 "%0.0f" $(bc -l <<< "($count11_13/$sum_our_haplo) * 100")
			
			printf -v perc12_1 "%0.0f" $(bc -l <<< "($count12_1/$sum_our_haplo) * 100")
			printf -v perc12_2 "%0.0f" $(bc -l <<< "($count12_2/$sum_our_haplo) * 100")
			printf -v perc12_3 "%0.0f" $(bc -l <<< "($count12_3/$sum_our_haplo) * 100")
			printf -v perc12_4 "%0.0f" $(bc -l <<< "($count12_4/$sum_our_haplo) * 100")
			printf -v perc12_5 "%0.0f" $(bc -l <<< "($count12_5/$sum_our_haplo) * 100")
			printf -v perc12_6 "%0.0f" $(bc -l <<< "($count12_6/$sum_our_haplo) * 100")
			printf -v perc12_7 "%0.0f" $(bc -l <<< "($count12_7/$sum_our_haplo) * 100")
			printf -v perc12_8 "%0.0f" $(bc -l <<< "($count12_8/$sum_our_haplo) * 100")
			printf -v perc12_9 "%0.0f" $(bc -l <<< "($count12_9/$sum_our_haplo) * 100")
			printf -v perc12_10 "%0.0f" $(bc -l <<< "($count12_10/$sum_our_haplo) * 100")
			printf -v perc12_11 "%0.0f" $(bc -l <<< "($count12_11/$sum_our_haplo) * 100")
			printf -v perc12_12 "%0.0f" $(bc -l <<< "($count12_12/$sum_our_haplo) * 100")
			printf -v perc12_13 "%0.0f" $(bc -l <<< "($count12_13/$sum_our_haplo) * 100")
			
			printf -v perc13_1 "%0.0f" $(bc -l <<< "($count13_1/$sum_our_haplo) * 100")
			printf -v perc13_2 "%0.0f" $(bc -l <<< "($count13_2/$sum_our_haplo) * 100")
			printf -v perc13_3 "%0.0f" $(bc -l <<< "($count13_3/$sum_our_haplo) * 100")
			printf -v perc13_4 "%0.0f" $(bc -l <<< "($count13_4/$sum_our_haplo) * 100")
			printf -v perc13_5 "%0.0f" $(bc -l <<< "($count13_5/$sum_our_haplo) * 100")
			printf -v perc13_6 "%0.0f" $(bc -l <<< "($count13_6/$sum_our_haplo) * 100")
			printf -v perc13_7 "%0.0f" $(bc -l <<< "($count13_7/$sum_our_haplo) * 100")
			printf -v perc13_8 "%0.0f" $(bc -l <<< "($count13_8/$sum_our_haplo) * 100")
			printf -v perc13_9 "%0.0f" $(bc -l <<< "($count13_9/$sum_our_haplo) * 100")
			printf -v perc13_10 "%0.0f" $(bc -l <<< "($count13_10/$sum_our_haplo) * 100")
			printf -v perc13_11 "%0.0f" $(bc -l <<< "($count13_11/$sum_our_haplo) * 100")
			printf -v perc13_12 "%0.0f" $(bc -l <<< "($count13_12/$sum_our_haplo) * 100")
			printf -v perc13_13 "%0.0f" $(bc -l <<< "($count13_13/$sum_our_haplo) * 100")
			
			printf -v perc14_1 "%0.0f" $(bc -l <<< "($count14_1/$sum_our_haplo) * 100")
			printf -v perc14_2 "%0.0f" $(bc -l <<< "($count14_2/$sum_our_haplo) * 100")
			printf -v perc14_3 "%0.0f" $(bc -l <<< "($count14_3/$sum_our_haplo) * 100")
			printf -v perc14_4 "%0.0f" $(bc -l <<< "($count14_4/$sum_our_haplo) * 100")
			printf -v perc14_5 "%0.0f" $(bc -l <<< "($count14_5/$sum_our_haplo) * 100")
			printf -v perc14_6 "%0.0f" $(bc -l <<< "($count14_6/$sum_our_haplo) * 100")
			printf -v perc14_7 "%0.0f" $(bc -l <<< "($count14_7/$sum_our_haplo) * 100")
			printf -v perc14_8 "%0.0f" $(bc -l <<< "($count14_8/$sum_our_haplo) * 100")
			printf -v perc14_9 "%0.0f" $(bc -l <<< "($count14_9/$sum_our_haplo) * 100")
			printf -v perc14_10 "%0.0f" $(bc -l <<< "($count14_10/$sum_our_haplo) * 100")
			printf -v perc14_11 "%0.0f" $(bc -l <<< "($count14_11/$sum_our_haplo) * 100")
			printf -v perc14_12 "%0.0f" $(bc -l <<< "($count14_12/$sum_our_haplo) * 100")
			printf -v perc14_13 "%0.0f" $(bc -l <<< "($count14_13/$sum_our_haplo) * 100")
			
			temp_file2=$(mktemp)
			trap "rm -f $temp_file2" 0 2 3 15
			printf "%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n%d	%s\n" $count4_1 "(TG)4(T)1" $count4_2 "(TG)4(T)2" $count4_3 "(TG)4(T)3" $count4_4 "(TG)4(T)4" $count4_5 "(TG)4(T)5" $count4_6 "(TG)4(T)6" $count4_7 "(TG)4(T)7" $count4_8 "(TG)4(T)8" $count4_9 "(TG)4(T)9" $count4_10 "(TG)4(T)10" $count4_11 "(TG)4(T)11" $count4_12 "(TG)4(T)12" $count4_13 "(TG)4(T)13" $count5_1 "(TG)5(T)1" $count5_2 "(TG)5(T)2" $count5_3 "(TG)5(T)3" $count5_4 "(TG)5(T)4" $count5_5 "(TG)5(T)5" $count5_6 "(TG)5(T)6" $count5_7 "(TG)5(T)7" $count5_8 "(TG)5(T)8" $count5_9 "(TG)5(T)9" $count5_10 "(TG)5(T)10" $count5_11 "(TG)5(T)11" $count5_12 "(TG)5(T)12" $count5_13 "(TG)5(T)13" $count6_1 "(TG)6(T)1" $count6_2 "(TG)6(T)2" $count6_3 "(TG)6(T)3" $count6_4 "(TG)6(T)4" $count6_5 "(TG)6(T)5" $count6_6 "(TG)6(T)6" $count6_7 "(TG)6(T)7" $count6_8 "(TG)6(T)8" $count6_9 "(TG)6(T)9" $count6_10 "(TG)6(T)10" $count6_11 "(TG)6(T)11" $count6_12 "(TG)6(T)12" $count6_13 "(TG)6(T)13" $count7_1 "(TG)7(T)1" $count7_2 "(TG)7(T)2" $count7_3 "(TG)7(T)3" $count7_4 "(TG)7(T)4" $count7_5 "(TG)7(T)5" $count7_6 "(TG)7(T)6" $count7_7 "(TG)7(T)7" $count7_8 "(TG)7(T)8" $count7_9 "(TG)7(T)9" $count7_10 "(TG)7(T)10" $count7_11 "(TG)7(T)11" $count7_12 "(TG)7(T)12" $count7_13 "(TG)7(T)13" $count8_1 "(TG)8(T)1" $count8_2 "(TG)8(T)2" $count8_3 "(TG)8(T)3" $count8_4 "(TG)8(T)4" $count8_5 "(TG)8(T)5" $count8_6 "(TG)8(T)6" $count8_7 "(TG)8(T)7" $count8_8 "(TG)8(T)8" $count8_9 "(TG)8(T)9" $count8_10 "(TG)8(T)10" $count8_11 "(TG)8(T)11" $count8_12 "(TG)8(T)12" $count8_13 "(TG)8(T)13" $count9_1 "(TG)9(T)1" $count9_2 "(TG)9(T)2" $count9_3 "(TG)9(T)3" $count9_4 "(TG)9(T)4" $count9_5 "(TG)9(T)5" $count9_6 "(TG)9(T)6" $count9_7 "(TG)9(T)7" $count9_8 "(TG)9(T)8" $count9_9 "(TG)9(T)9" $count9_10 "(TG)9(T)10" $count9_11 "(TG)9(T)11" $count9_12 "(TG)9(T)12" $count9_13 "(TG)9(T)13" $count10_1 "(TG)10(T)1" $count10_2 "(TG)10(T)2" $count10_3 "(TG)10(T)3" $count10_4 "(TG)10(T)4" $count10_5 "(TG)10(T)5" $count10_6 "(TG)10(T)6" $count10_7 "(TG)10(T)7" $count10_8 "(TG)10(T)8" $count10_9 "(TG)10(T)9" $count10_10 "(TG)10(T)10" $count10_11 "(TG)10(T)11" $count10_12 "(TG)10(T)12" $count10_13 "(TG)10(T)13" $count11_1 "(TG)11(T)1" $count11_2 "(TG)11(T)2" $count11_3 "(TG)11(T)3" $count11_4 "(TG)11(T)4" $count11_5 "(TG)11(T)5" $count11_6 "(TG)11(T)6" $count11_7 "(TG)11(T)7" $count11_8 "(TG)11(T)8" $count11_9 "(TG)11(T)9" $count11_10 "(TG)11(T)10" $count11_11 "(TG)11(T)11" $count11_12 "(TG)11(T)12" $count11_13 "(TG)11(T)13" $count12_1 "(TG)12(T)1" $count12_2 "(TG)12(T)2" $count12_3 "(TG)12(T)3" $count12_4 "(TG)12(T)4" $count12_5 "(TG)12(T)5" $count12_6 "(TG)12(T)6" $count12_7 "(TG)12(T)7" $count12_8 "(TG)12(T)8" $count12_9 "(TG)12(T)9" $count12_10 "(TG)12(T)10" $count12_11 "(TG)12(T)11" $count12_12 "(TG)12(T)12" $count12_13 "(TG)12(T)13" $count13_1 "(TG)13(T)1" $count13_2 "(TG)13(T)2" $count13_3 "(TG)13(T)3" $count13_4 "(TG)13(T)4" $count13_5 "(TG)13(T)5" $count13_6 "(TG)13(T)6" $count13_7 "(TG)13(T)7" $count13_8 "(TG)13(T)8" $count13_9 "(TG)13(T)9" $count13_10 "(TG)13(T)10" $count13_11 "(TG)13(T)11" $count13_12 "(TG)13(T)12" $count13_13 "(TG)13(T)13" $count14_1 "(TG)14(T)1" $count14_2 "(TG)14(T)2" $count14_3 "(TG)14(T)3" $count14_4 "(TG)14(T)4" $count14_5 "(TG)14(T)5" $count14_6 "(TG)14(T)6" $count14_7 "(TG)14(T)7" $count14_8 "(TG)14(T)8" $count14_9 "(TG)14(T)9" $count14_10 "(TG)14(T)10" $count14_11 "(TG)14(T)11" $count14_12 "(TG)14(T)12" $count14_13 "(TG)14(T)13" > $temp_file2
			
			max_array=( $( sort -nrk1,1 $temp_file2 | head -3 | cut -d '	' -f1 --output-delimiter=" " ) )
			top_haplo_1_count=${max_array[0]}
			top_haplo_2_count=${max_array[1]}
			top_haplo_3_count=${max_array[2]}
			
			max_array=( $( sort -nrk1,1 $temp_file2 | head -2 | cut -d '	' -f2 --output-delimiter=" " ) )
			top_haplo_1_name=${max_array[0]}
			top_haplo_2_name=${max_array[1]}
			
			
			printf -v percent_our_haplo_vs_total_at_locus "%0.0f" $(bc -l <<< "($sum_our_haplo/$total_reads) * 100")
			printf -v percent_not_our_haplo "%0.0f" $(bc -l <<< "(($total_reads-$sum_our_haplo)/$total_reads) * 100")
			
			#internal representations of top 2 haplo percentages
			#using these to calc the ratio. since output was changed to no decimals, created these internal variables to keep ratio the same
			printf -v internal_top_haplo_1_percent "%0.2f" $(bc -l <<< "($top_haplo_1_count/$sum_our_haplo) * 100")
			printf -v internal_top_haplo_2_percent "%0.2f" $(bc -l <<< "($top_haplo_2_count/$sum_our_haplo) * 100")
			
			printf -v top_haplo_1_percent "%0.0f" $(bc -l <<< "($top_haplo_1_count/$sum_our_haplo) * 100")
			printf -v top_haplo_2_percent "%0.0f" $(bc -l <<< "($top_haplo_2_count/$sum_our_haplo) * 100")
			printf -v top_haplo_3_percent "%0.0f" $(bc -l <<< "($top_haplo_3_count/$sum_our_haplo) * 100")
			
			#ratio_top_2=$(bc <<< "scale=4; ($top_haplo_2_percent/$top_haplo_1_percent)")
			printf -v ratio_top_2 "%0.3f" $(bc -l <<< "($internal_top_haplo_2_percent/$internal_top_haplo_1_percent)")
			
			zygosity_flag="Borderline"
			HOMO_THRESHOLD=0.275
			HET_THRESHOLD=0.475
			percent_haplo_used_for_call=0
			next_highest_percent_haplo=0
			
			#call homo
			if (( $(echo "$ratio_top_2 < $HOMO_THRESHOLD" |bc -l) )); then
				zygosity_flag="Homo"
				percent_haplo_used_for_call=$top_haplo_1_percent
				next_highest_percent_haplo=$top_haplo_2_percent
			#call het
			elif (( $(echo "$ratio_top_2 > $HET_THRESHOLD" |bc -l) )); then
				zygosity_flag="Het"
				printf -v percent_haplo_used_for_call "%0.0f" $(bc -l <<< "($top_haplo_1_percent+$top_haplo_2_percent)")
				next_highest_percent_haplo=$top_haplo_3_percent
			#borderline
			else
				printf -v percent_haplo_used_for_call "%0.0f" $(bc -l <<< "($top_haplo_1_percent+$top_haplo_2_percent)")
				next_highest_percent_haplo=$top_haplo_3_percent
			fi
		fi
	fi
	
	
	#zygosity options
		#NA
		#Borderline
		#Het
		#Homo
	if [ "$zygosity_flag" = "NA" ] || [ "$zygosity_flag" = "Borderline" ]; then
		final_call=${zygosity_flag}
	elif [ "$zygosity_flag" = "Het" ]; then
		final_call=${top_haplo_1_name}/${top_haplo_2_name}
	elif [ "$zygosity_flag" = "Homo" ]; then
		final_call=${top_haplo_1_name}/${top_haplo_1_name}
	fi
#for debugging	echo "made it to the end"
#for debugging	echo $out_base
	#polyTGT_calls.txt
	#sample	final_call	total_reads_at_locus	sum_our_haplo	percent_our_haplo_vs_total_at_locus	percent_not_our_haplo	top_haplo_1_name	top_haplo_1_count	top_haplo_1_percent	top_haplo_2_name	top_haplo_2_count	top_haplo_2_percent	ratio_top_2	zygosity	percent_haplo_used_for_call	next_highest_percent_haplo\n"
	printf "%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s\n" $out_base $final_call $total_reads $sum_our_haplo $percent_our_haplo_vs_total_at_locus $percent_not_our_haplo $top_haplo_1_name $top_haplo_1_count $top_haplo_1_percent $top_haplo_2_name $top_haplo_2_count $top_haplo_2_percent $ratio_top_2 $zygosity_flag $percent_haplo_used_for_call $next_highest_percent_haplo >> $hook_output_dir/polyTGT_calls.txt
#now append data to the output files we already started with headers
	#polyTGT_counts.txt
	printf "%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s\n" $out_base $final_call $total_reads $count4_1 $count4_2 $count4_3 $count4_4 $count4_5 $count4_6 $count4_7 $count4_8 $count4_9 $count4_10 $count4_11 $count4_12 $count4_13 $count5_1 $count5_2 $count5_3 $count5_4 $count5_5 $count5_6 $count5_7 $count5_8 $count5_9 $count5_10 $count5_11 $count5_12 $count5_13 $count6_1 $count6_2 $count6_3 $count6_4 $count6_5 $count6_6 $count6_7 $count6_8 $count6_9 $count6_10 $count6_11 $count6_12 $count6_13 $count7_1 $count7_2 $count7_3 $count7_4 $count7_5 $count7_6 $count7_7 $count7_8 $count7_9 $count7_10 $count7_11 $count7_12 $count7_13 $count8_1 $count8_2 $count8_3 $count8_4 $count8_5 $count8_6 $count8_7 $count8_8 $count8_9 $count8_10 $count8_11 $count8_12 $count8_13 $count9_1 $count9_2 $count9_3 $count9_4 $count9_5 $count9_6 $count9_7 $count9_8 $count9_9 $count9_10 $count9_11 $count9_12 $count9_13 $count10_1 $count10_2 $count10_3 $count10_4 $count10_5 $count10_6 $count10_7 $count10_8 $count10_9 $count10_10 $count10_11 $count10_12 $count10_13 $count11_1 $count11_2 $count11_3 $count11_4 $count11_5 $count11_6 $count11_7 $count11_8 $count11_9 $count11_10 $count11_11 $count11_12 $count11_13 $count12_1 $count12_2 $count12_3 $count12_4 $count12_5 $count12_6 $count12_7 $count12_8 $count12_9 $count12_10 $count12_11 $count12_12 $count12_13 $count13_1 $count13_2 $count13_3 $count13_4 $count13_5 $count13_6 $count13_7 $count13_8 $count13_9 $count13_10 $count13_11 $count13_12 $count13_13 $count14_1 $count14_2 $count14_3 $count14_4 $count14_5 $count14_6 $count14_7 $count14_8 $count14_9 $count14_10 $count14_11 $count14_12 $count14_13 >> $hook_output_dir/polyTGT_counts.txt
	
	#polyTGT_percents.txt
	printf "%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s	%s\n" $out_base $final_call $total_reads $sum_our_haplo $percent_our_haplo_vs_total_at_locus $percent_not_our_haplo $perc4_1 $perc4_2 $perc4_3 $perc4_4 $perc4_5 $perc4_6 $perc4_7 $perc4_8 $perc4_9 $perc4_10 $perc4_11 $perc4_12 $perc4_13 $perc5_1 $perc5_2 $perc5_3 $perc5_4 $perc5_5 $perc5_6 $perc5_7 $perc5_8 $perc5_9 $perc5_10 $perc5_11 $perc5_12 $perc5_13 $perc6_1 $perc6_2 $perc6_3 $perc6_4 $perc6_5 $perc6_6 $perc6_7 $perc6_8 $perc6_9 $perc6_10 $perc6_11 $perc6_12 $perc6_13 $perc7_1 $perc7_2 $perc7_3 $perc7_4 $perc7_5 $perc7_6 $perc7_7 $perc7_8 $perc7_9 $perc7_10 $perc7_11 $perc7_12 $perc7_13 $perc8_1 $perc8_2 $perc8_3 $perc8_4 $perc8_5 $perc8_6 $perc8_7 $perc8_8 $perc8_9 $perc8_10 $perc8_11 $perc8_12 $perc8_13 $perc9_1 $perc9_2 $perc9_3 $perc9_4 $perc9_5 $perc9_6 $perc9_7 $perc9_8 $perc9_9 $perc9_10 $perc9_11 $perc9_12 $perc9_13 $perc10_1 $perc10_2 $perc10_3 $perc10_4 $perc10_5 $perc10_6 $perc10_7 $perc10_8 $perc10_9 $perc10_10 $perc10_11 $perc10_12 $perc10_13 $perc11_1 $perc11_2 $perc11_3 $perc11_4 $perc11_5 $perc11_6 $perc11_7 $perc11_8 $perc11_9 $perc11_10 $perc11_11 $perc11_12 $perc11_13 $perc12_1 $perc12_2 $perc12_3 $perc12_4 $perc12_5 $perc12_6 $perc12_7 $perc12_8 $perc12_9 $perc12_10 $perc12_11 $perc12_12 $perc12_13 $perc13_1 $perc13_2 $perc13_3 $perc13_4 $perc13_5 $perc13_6 $perc13_7 $perc13_8 $perc13_9 $perc13_10 $perc13_11 $perc13_12 $perc13_13 $perc14_1 $perc14_2 $perc14_3 $perc14_4 $perc14_5 $perc14_6 $perc14_7 $perc14_8 $perc14_9 $perc14_10 $perc14_11 $perc14_12 $perc14_13 >> $hook_output_dir/polyTGT_percents.txt
	
done